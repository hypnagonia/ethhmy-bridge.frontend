{
  "contractName": "Bridge",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getNextParties",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "message",
          "type": "bytes"
        },
        {
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "checkSignedMessage",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "message",
          "type": "bytes"
        },
        {
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "applyMessage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "name": "getNextPartyId",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "status",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_epoch",
          "type": "uint16"
        }
      ],
      "name": "getThreshold",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRangeSize",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCloseEpoch",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPartyId",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_epoch",
          "type": "uint16"
        }
      ],
      "name": "getParties",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNextValidators",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_epoch",
          "type": "uint16"
        }
      ],
      "name": "getRangeSize",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getX",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_epoch",
          "type": "uint16"
        }
      ],
      "name": "getCloseEpoch",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_epoch",
          "type": "uint16"
        }
      ],
      "name": "getY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_epoch",
          "type": "uint16"
        }
      ],
      "name": "getX",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_epoch",
          "type": "uint16"
        }
      ],
      "name": "getStartBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "states",
      "outputs": [
        {
          "name": "startBlock",
          "type": "uint32"
        },
        {
          "name": "endBlock",
          "type": "uint32"
        },
        {
          "name": "nonce",
          "type": "uint32"
        },
        {
          "name": "threshold",
          "type": "uint16"
        },
        {
          "name": "rangeSize",
          "type": "uint16"
        },
        {
          "name": "closeEpoch",
          "type": "bool"
        },
        {
          "name": "x",
          "type": "uint256"
        },
        {
          "name": "y",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNextThreshold",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "epoch",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "handledMessages",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStartBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getParties",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextEpoch",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getValidators",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNextRangeSize",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_epoch",
          "type": "uint16"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNonce",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNextCloseEpoch",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getThreshold",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_epoch",
          "type": "uint16"
        }
      ],
      "name": "getValidators",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "threshold",
          "type": "uint16"
        },
        {
          "name": "validators",
          "type": "address[]"
        },
        {
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "name": "limits",
          "type": "uint96[2]"
        },
        {
          "name": "rangeSize",
          "type": "uint16"
        },
        {
          "name": "closeEpoch",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "value",
          "type": "uint96"
        },
        {
          "indexed": false,
          "name": "nonce",
          "type": "uint32"
        }
      ],
      "name": "ExchangeRequest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "epoch",
          "type": "uint16"
        }
      ],
      "name": "EpochEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "epoch",
          "type": "uint16"
        }
      ],
      "name": "EpochClose",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ForceSign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "oldEpoch",
          "type": "uint16"
        },
        {
          "indexed": true,
          "name": "newEpoch",
          "type": "uint16"
        }
      ],
      "name": "NewEpoch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "epoch",
          "type": "uint16"
        }
      ],
      "name": "NewEpochCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "oldEpoch",
          "type": "uint16"
        },
        {
          "indexed": true,
          "name": "newEpoch",
          "type": "uint16"
        }
      ],
      "name": "NewFundsTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "epoch",
          "type": "uint16"
        },
        {
          "indexed": false,
          "name": "x",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "EpochStart",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint96"
        }
      ],
      "name": "exchange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.e560f70d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getNextParties\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"message\",\"type\":\"bytes\"},{\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"checkSignedMessage\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"message\",\"type\":\"bytes\"},{\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"applyMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"}],\"name\":\"getNextPartyId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_epoch\",\"type\":\"uint16\"}],\"name\":\"getThreshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint96\"}],\"name\":\"exchange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRangeSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCloseEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPartyId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_epoch\",\"type\":\"uint16\"}],\"name\":\"getParties\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNextValidators\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_epoch\",\"type\":\"uint16\"}],\"name\":\"getRangeSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getX\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_epoch\",\"type\":\"uint16\"}],\"name\":\"getCloseEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_epoch\",\"type\":\"uint16\"}],\"name\":\"getY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_epoch\",\"type\":\"uint16\"}],\"name\":\"getX\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_epoch\",\"type\":\"uint16\"}],\"name\":\"getStartBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"states\",\"outputs\":[{\"name\":\"startBlock\",\"type\":\"uint32\"},{\"name\":\"endBlock\",\"type\":\"uint32\"},{\"name\":\"nonce\",\"type\":\"uint32\"},{\"name\":\"threshold\",\"type\":\"uint16\"},{\"name\":\"rangeSize\",\"type\":\"uint16\"},{\"name\":\"closeEpoch\",\"type\":\"bool\"},{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNextThreshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"epoch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"handledMessages\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStartBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getParties\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getValidators\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNextRangeSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_epoch\",\"type\":\"uint16\"}],\"name\":\"getNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNextCloseEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_epoch\",\"type\":\"uint16\"}],\"name\":\"getValidators\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"threshold\",\"type\":\"uint16\"},{\"name\":\"validators\",\"type\":\"address[]\"},{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"limits\",\"type\":\"uint96[2]\"},{\"name\":\"rangeSize\",\"type\":\"uint16\"},{\"name\":\"closeEpoch\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint96\"},{\"indexed\":false,\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"ExchangeRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"epoch\",\"type\":\"uint16\"}],\"name\":\"EpochEnd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"epoch\",\"type\":\"uint16\"}],\"name\":\"EpochClose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ForceSign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldEpoch\",\"type\":\"uint16\"},{\"indexed\":true,\"name\":\"newEpoch\",\"type\":\"uint16\"}],\"name\":\"NewEpoch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"epoch\",\"type\":\"uint16\"}],\"name\":\"NewEpochCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldEpoch\",\"type\":\"uint16\"},{\"indexed\":true,\"name\":\"newEpoch\",\"type\":\"uint16\"}],\"name\":\"NewFundsTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"epoch\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"x\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"EpochStart\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/build/contracts/Bridge.sol\":\"Bridge\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":3},\"remappings\":[]},\"sources\":{\"/build/contracts/BasicBridge.sol\":{\"keccak256\":\"0x142b75ea1c1e818b3e5d2af54444d61d4380463763cadfe350793f006007a069\",\"urls\":[\"bzzr://18f1ff72964afed291e93eccc1fabbebe1f975ae4bc1fc14dd683092e3e51351\",\"dweb:/ipfs/Qmdap53cugk2yKRYNvjRamLfotLuPMf2o98caSjQUwGYMy\"]},\"/build/contracts/Bridge.sol\":{\"keccak256\":\"0x1439e311b9f0320a5b7b11778935d6440decffbfbc7d3c0466f39f581eeb1a8c\",\"urls\":[\"bzzr://66f90d19939c11ea69a3f9af856cf2254b5cff3306a58d67c58164e37c9fa3d0\",\"dweb:/ipfs/QmWKhuS3YYU95EDZkgeKzP4QYxx8XrGYUFHBh8zPQ6P3Kb\"]},\"/build/contracts/Government.sol\":{\"keccak256\":\"0xcba507fde0d97d8c7533a87a97ffd67e98128a309576862d38d93be4410d1a26\",\"urls\":[\"bzzr://bb9b91fb5e4f2de07c5fd3d3bc74ed0806c9bd560a6120b3e39537dce27bc26a\",\"dweb:/ipfs/QmXbt4de6aw9RwYdApiKfedVaWZ32gWsVoHPtiADRRjskW\"]},\"/build/contracts/MessageDecoder.sol\":{\"keccak256\":\"0xaec594bbee40a9bb2dda6dbab80c74c9f2eee1358e0f27fcdf2fd806f80953ec\",\"urls\":[\"bzzr://155ee59a26120d93ab6fb0be5ecd8d7c07c778f80ad3c89c14976cfee9c052c7\",\"dweb:/ipfs/QmTv59UgwkwE2A9fJzGt5osXR9SaLk6jfpeSGKoZ6rZoux\"]},\"/build/contracts/MessageHandler.sol\":{\"keccak256\":\"0xd42a6789eb051cc3e5b3a57bdcea755ca12c7621091b826dc636beaf75596d33\",\"urls\":[\"bzzr://f587d8886c2845d75d4f4a4ea9a36db7b4b699176d61923c39bf05866372e01e\",\"dweb:/ipfs/QmSr7sBG6y28uqfK7v7NiNR2qYUfa9nM1ydJVdqu5p7BWJ\"]},\"/build/contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002e7538038062002e75833981810160405260e08110156200003757600080fd5b8151602083018051919392830192916401000000008111156200005957600080fd5b820160208101848111156200006d57600080fd5b81518560208202830111640100000000821117156200008b57600080fd5b50506020820151608083015160a0840151835193965091945060409093019291620000b557600080fd5b84518661ffff161115620000c857600080fd5b600280546001600160a01b0319166001600160a01b03861617905560018054600362ffffff199091161764ffff000000191663010000009081179182905560408051610120810182528881526000602080830182905263ffffffff838501819052606084015261ffff8c8116608085015288811660a085015287151560c085015260e084018390526101008401839052949095049093168352828452912081518051929391926200017d9284920190620002f7565b5060208281015160018381018054604080880151606089015160808a015160a08b015160c08c015163ffffffff1990961663ffffffff998a161763ffffffff60201b1916640100000000948a16949094029390931763ffffffff60401b19166801000000000000000098909216979097021761ffff60601b19166c0100000000000000000000000061ffff978816021761ffff60701b19166e01000000000000000000000000000096909116959095029490941760ff60801b19167001000000000000000000000000000000009115159190910217905560e085015160028501556101009094015160039093019290925585518354918701516001600160601b03908116710100000000000000000000000000000000000291166501000000000002600160281b600160881b031990921691909117600160881b600160e81b031916178255516000907ffb8e00e9d7c99f4d3070324ad79f8db723e140c6cea87362c8f92500d59d9f14908290a35050505050506200038b565b8280548282559060005260206000209081019282156200034f579160200282015b828111156200034f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000318565b506200035d92915062000361565b5090565b6200038891905b808211156200035d5780546001600160a01b031916815560010162000368565b90565b612ada806200039b6000396000f3fe608060405234801561001057600080fd5b50600436106101965760003560e01c8063073ce82d1461019b5780630b7f1665146101ba5780630c59d2bb146101d4578063120646e914610319578063197d6ca414610444578063200d2ed21461046a5780632310dd3c1461049657806327dd88d7146104b75780632a4b93af146104dd5780632dfaccc5146104e55780632fb0fc6f1461050157806333a4455a1461050957806340cddab31461052a57806346295bcf146105825780635197c7aa146105a35780635405d2ba146105ab57806355a373d6146105cc5780635f393b16146105f0578063686818191461061157806371abf071146106325780637bd13f541461066c5780638199d3fd146106e1578063900cf0cf146106e957806399b56ff8146106f1578063a5f18c011461070e578063a8311aa814610716578063aea0e78b1461071e578063b7ab4db514610726578063c2668caf1461072e578063caf0b74b14610736578063d087d28814610757578063d921f5301461075f578063e75235b814610767578063eda0e92a1461076f575b600080fd5b6101a3610790565b6040805161ffff9092168252519081900360200190f35b6101c26107b0565b60408051918252519081900360200190f35b6102fd600480360360408110156101ea57600080fd5b810190602081018135600160201b81111561020457600080fd5b82018360208201111561021657600080fd5b803590602001918460018302840111600160201b8311171561023757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561028957600080fd5b82018360208201111561029b57600080fd5b803590602001918460018302840111600160201b831117156102bc57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506107c8945050505050565b6040805192835261ffff90911660208301528051918290030190f35b6104426004803603604081101561032f57600080fd5b810190602081018135600160201b81111561034957600080fd5b82018360208201111561035b57600080fd5b803590602001918460018302840111600160201b8311171561037c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156103ce57600080fd5b8201836020820111156103e057600080fd5b803590602001918460018302840111600160201b8311171561040157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c7b945050505050565b005b6101a36004803603602081101561045a57600080fd5b50356001600160a01b0316611349565b6104726113ba565b6040518082600481111561048257fe5b60ff16815260200191505060405180910390f35b6101a3600480360360208110156104ac57600080fd5b503561ffff166113c3565b610442600480360360208110156104cd57600080fd5b50356001600160601b03166113e6565b6101a36116bc565b6104ed6116d4565b604080519115158252519081900360200190f35b6101a36116ec565b6101a36004803603602081101561051f57600080fd5b503561ffff1661175a565b610532611770565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561056e578181015183820152602001610556565b505050509050019250505060405180910390f35b6101a36004803603602081101561059857600080fd5b503561ffff1661178a565b6101c26117ad565b6104ed600480360360208110156105c157600080fd5b503561ffff166117c5565b6105d46117e8565b604080516001600160a01b039092168252519081900360200190f35b6101c26004803603602081101561060657600080fd5b503561ffff166117f7565b6101c26004803603602081101561062757600080fd5b503561ffff16611810565b6106536004803603602081101561064857600080fd5b503561ffff16611829565b6040805163ffffffff9092168252519081900360200190f35b61068d6004803603602081101561068257600080fd5b503561ffff16611848565b6040805163ffffffff998a1681529789166020890152959097168686015261ffff938416606087015291909216608085015290151560a084015260c083015260e08201929092529051908190036101000190f35b6101a36118ac565b6101a36118c6565b6104ed6004803603602081101561070757600080fd5b50356118d5565b6106536118ea565b6101a3611902565b6101a361191a565b61053261192b565b6101a3611943565b6106536004803603602081101561074c57600080fd5b503561ffff1661195d565b610653611983565b6104ed61199b565b6101a36119b5565b6105326004803603602081101561078557600080fd5b503561ffff166119cd565b6001546000906107aa906301000000900461ffff1661175a565b90505b90565b6001546000906107aa90610100900461ffff166117f7565b60008060418351816107d657fe5b0615610827576040805162461bcd60e51b815260206004820152601b60248201527a092dcc6dee4e4cac6e840e6d2cedcc2e8eae4cae640d8cadccee8d602b1b604482015290519081900360640190fd5b60008451600314156108ce578460405160200180807a19457468657265756d205369676e6564204d6573736167653a0a3360281b815250601b0182805190602001908083835b6020831061088c5780518252601f19909201916020918201910161086d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012090506109cf565b845160201415610931578460405160200180807b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b815250601c0182805190602001908083836020831061088c5780518252601f19909201916020918201910161086d565b845160431415610994578460405160200180807b19457468657265756d205369676e6564204d6573736167653a0a363760201b815250601c0182805190602001908083836020831061088c5780518252601f19909201916020918201910161086d565b6040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b60008181526003602052604090205460ff1615610a2c576040805162461bcd60e51b8152602060048201526016602482015275151e081dd85cc8185b1c9958591e481a185b991b195960521b604482015290519081900360640190fd5b600385015160015461ffff630100000090910481169082161115610a8e576040805162461bcd60e51b815260206004820152601460248201527324b73b30b634b21032b837b1b410373ab6b132b960611b604482015290519081900360640190fd5b60006041865181610a9b57fe5b049050610aa7826113c3565b61ffff16811015610af7576040805162461bcd60e51b81526020600482015260156024820152744e6f7420656e6f756768207369676e61747572657360581b604482015290519081900360640190fd5b6060610b02836119cd565b905060008080805b85811015610c695760006041820290508060208d01015194508060408d01015193508060608d01015160001a9250600060018a85888860405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610b97573d6000803e3d6000fd5b5050604051601f1901519150600090505b8751811015610c0c57816001600160a01b0316888281518110610bc757fe5b60200260200101516001600160a01b03161415610c0457878181518110610bea57fe5b6020026020010160006001600160a01b0316815250610c0c565b600101610ba8565b8751811415610c5e576040805162461bcd60e51b81526020600482015260196024820152784e6f7420612076616c696461746f72207369676e617475726560381b604482015290519081900360640190fd5b505050600101610b0a565b50959a94995093975050505050505050565b600080610c8884846107c8565b6000828152600360205260408120805460ff1916600117905586519294509092509085908290610cb457fe5b016020015160f81c600b811115610cc757fe5b9050600081600b811115610cd757fe5b1480610cee5750600a81600b811115610cec57fe5b145b15610d4a5760015461ffff83811663010000009092041614610d45576040805162461bcd60e51b81526020600482015260176024820152600080516020612a86833981519152604482015290519081900360640190fd5b610e00565b600b81600b811115610d5857fe5b1415610db05760015461ffff61010090910481169083161115610d45576040805162461bcd60e51b81526020600482015260176024820152600080516020612a86833981519152604482015290519081900360640190fd5b60015461ffff8381166101009092041614610e00576040805162461bcd60e51b81526020600482015260176024820152600080516020612a86833981519152604482015290519081900360640190fd5b600081600b811115610e0e57fe5b1415610e79578451604314610e58576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b600080610e6487611a3c565b91509150610e728282611a4b565b5050611342565b600181600b811115610e8757fe5b1415610ede578451600314610ed1576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b610ed9611bed565b611342565b600281600b811115610eec57fe5b1415610f3e578451600314610f36576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b610ed9611d29565b600381600b811115610f4c57fe5b1415610f9e578451600314610f96576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b610ed9611dbf565b600481600b811115610fac57fe5b1415611012578451602014610ff6576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b60006110018661202c565b905061100c81612033565b50611342565b600581600b81111561102057fe5b141561108057845160201461106a576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b60006110758661202c565b905061100c81612124565b600681600b81111561108e57fe5b14156110ee5784516020146110d8576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b60006110e386612339565b905061100c81612340565b600781600b8111156110fc57fe5b141561115c578451602014611146576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b600061115186612339565b905061100c81612423565b600881600b81111561116a57fe5b14156111ca5784516020146111b4576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b60006111bf86612501565b905061100c8161250b565b600981600b8111156111d857fe5b141561122a578451600314611222576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b610ed9612599565b600a81600b81111561123857fe5b141561128a578451600314611282576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b610ed96126a1565b600b81600b81111561129857fe5b14156112fc5784516043146112e2576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b6000806112ee87612745565b91509150610e728282612754565b6040805162461bcd60e51b81526020600482015260166024820152752ab735b737bbb71036b2b9b9b0b3b29030b1ba34b7b760511b604482015290519081900360640190fd5b5050505050565b60006060611355611770565b905060005b611362610790565b61ffff168110156113ae57836001600160a01b031682828151811061138357fe5b60200260200101516001600160a01b031614156113a65760010191506113b59050565b60010161135a565b5060009150505b919050565b60015460ff1681565b61ffff908116600090815260208190526040902060010154600160601b90041690565b600060015460ff1660048111156113f957fe5b14611440576040805162461bcd60e51b81526020600482015260126024820152714e6f7420696e20726561647920737461746560701b604482015290519081900360640190fd5b6001546001600160601b03600160281b90910481169082161080159061147457506402540be400816001600160601b031610155b801561149657506001546001600160601b03600160881b909104811690821611155b61149f57600080fd5b60006114a96116bc565b61ffff166114b56118ea565b430363ffffffff16816114c457fe5b600154604080519390920460e081901b6001600160e01b03191660208086019190915261010090920460f01b6001600160f01b0319166024850152825180850360060181526026909401835283519382019390932060009081526004909152205490915060ff166115d857600180546040805160e085901b6001600160e01b0319166020808301919091526101009384900460f01b6001600160f01b03191660248301528251808303600601815260269092018352815191810191909120600090815260048252828120805460ff191686179055845461ffff94900493909316835282905290208101805463ffffffff60401b19811663ffffffff600160401b928390048116909401909316029190911790555b600254604080516323b872dd60e01b81523360048201523060248201526001600160601b038516604482015290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561163a57600080fd5b505af115801561164e573d6000803e3d6000fd5b505050506040513d602081101561166457600080fd5b507f31e108482b78b4d36dea7b82ed2a63a14bb1556d33d0e61a668f4282450970f2905082611691611983565b604080516001600160601b03909316835263ffffffff90911660208301528051918290030190a15050565b6001546000906107aa90610100900461ffff1661178a565b6001546000906107aa90610100900461ffff166117c5565b600060606116f861192b565b905060005b611705611902565b61ffff1681101561175157336001600160a01b031682828151811061172657fe5b60200260200101516001600160a01b031614156117495760010191506107ad9050565b6001016116fd565b50600091505090565b61ffff1660009081526020819052604090205490565b6001546060906107aa906301000000900461ffff166119cd565b61ffff908116600090815260208190526040902060010154600160701b90041690565b6001546000906107aa90610100900461ffff16611810565b61ffff16600090815260208190526040902060010154600160801b900460ff1690565b6002546001600160a01b031681565b61ffff1660009081526020819052604090206003015490565b61ffff1660009081526020819052604090206002015490565b61ffff1660009081526020819052604090206001015463ffffffff1690565b60006020819052908152604090206001810154600282015460039092015463ffffffff80831693600160201b8404821693600160401b810490921692600160601b830461ffff90811693600160701b810490911692600160801b90910460ff169188565b6001546000906107aa906301000000900461ffff166113c3565b600154610100900461ffff1681565b60036020526000908152604090205460ff1681565b6001546000906107aa90610100900461ffff16611829565b6001546000906107aa90610100900461ffff1661175a565b6001546301000000900461ffff1681565b6001546060906107aa90610100900461ffff166119cd565b6001546000906107aa906301000000900461ffff1661178a565b61ffff16600090815260208190526040902060010154600160401b900463ffffffff1690565b6001546000906107aa90610100900461ffff1661195d565b6001546000906107aa906301000000900461ffff166117c5565b6001546000906107aa90610100900461ffff166113c3565b61ffff811660009081526020818152604091829020805483518184028101840190945280845260609392830182828015611a3057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a12575b50505050509050919050565b60238101516043909101519091565b600360015460ff166004811115611a5e57fe5b14611aa6576040805162461bcd60e51b81526020600482015260136024820152724e6f7420696e206b657967656e20737461746560681b604482015290519081900360640190fd5b6001805461ffff630100000091829004811660009081526020819052604080822060020187905584548490048316825280822060030186905584548490048316825290208301805463ffffffff60401b191663ffffffff60401b179055825491909104161415611b9b576001805460ff191680825563010000009081900461ffff908116600090815260208181526040918290208501805463ffffffff19164363ffffffff16179055845462ffff0019811661010095909104841685021794859055815187815290810186905281519390940490911692600080516020612a46833981519152929081900390910190a2611be9565b6001805460ff1916600417908190556040516301000000820461ffff90811692610100900416907fb54ecb66a176f6f9932a576abe0b1671de59cf93398c93922abbcdedb4daa9ae90600090a35b5050565b600460015460ff166004811115611c0057fe5b14611c50576040805162461bcd60e51b815260206004820152601b60248201527a4e6f7420696e2066756e6473207472616e7366657220737461746560281b604482015290519081900360640190fd5b600154610100900461ffff16611c975760405162461bcd60e51b81526004018080602001828103825260288152602001806129fe6028913960400191505060405180910390fd5b6001805460ff191680825563010000009081900461ffff90811660009081526020819052604090208301805463ffffffff19164363ffffffff16179055825462ffff0019811661010093909104821683021792839055910416600080516020612a46833981519152611d076117ad565b611d0f6107b0565b6040805192835260208301919091528051918290030190a2565b6001805460ff166004811115611d3b57fe5b14611d8a576040805162461bcd60e51b815260206004820152601a6024820152794e6f7420696e20636c6f73696e672065706f636820737461746560301b604482015290519081900360640190fd5b60018054600260ff19909116179081905560405161010090910461ffff16906000805160206129be83398151915290600090a2565b600060015460ff166004811115611dd257fe5b14611e19576040805162461bcd60e51b81526020600482015260126024820152714e6f7420696e20726561647920737461746560701b604482015290519081900360640190fd5b60018054610100900461ffff90811660009081526020819052604090208201805463ffffffff60201b1916600160201b4363ffffffff1602179055815464ffff0000001981166301000000918290048316840190921602179055611e7b6119b5565b600180546301000000900461ffff9081166000908152602081905260409020909101805461ffff60601b1916600160601b9390921692909202179055611ebf61192b565b6001546301000000900461ffff166000908152602081815260409091208251611eee93919291909101906128f6565b50611ef76116bc565b600180546301000000900461ffff9081166000908152602081905260409020909101805461ffff60701b1916600160701b9390921692909202179055611f3b6116d4565b6001805461ffff6301000000909104166000908152602081905260409020018054911515600160801b0260ff60801b19909216919091179055611f7c6116d4565b15611fe0576001805460ff191681179055604051600080516020612a6683398151915290600090a160015460405161010090910461ffff16907fe143ea1b9fab2f5402f146a5618fb1cd40b4b03d37a0b98d3b62a706affbcc7290600090a261202a565b6001805460ff19166002179055604051600080516020612a6683398151915290600090a160015460405161010090910461ffff16906000805160206129be83398151915290600090a25b565b6017015190565b600260015460ff16600481111561204657fe5b14612086576040805162461bcd60e51b815260206004820152601360248201526000805160206129de833981519152604482015290519081900360640190fd5b61208f81611349565b61ffff16156120db576040805162461bcd60e51b815260206004820152601360248201527220b63932b0b23c9030903b30b634b230ba37b960691b604482015290519081900360640190fd5b600180546301000000900461ffff16600090815260208181526040822080549384018155825290200180546001600160a01b0319166001600160a01b0392909216919091179055565b600260015460ff16600481111561213757fe5b14612177576040805162461bcd60e51b815260206004820152601360248201526000805160206129de833981519152604482015290519081900360640190fd5b61218081611349565b61ffff166121cf576040805162461bcd60e51b815260206004820152601760248201527620b63932b0b23c903737ba1030903b30b634b230ba37b960491b604482015290519081900360640190fd5b600060016121db610790565b03905060005b8161ffff168110156122c2576001546301000000900461ffff16600090815260208190526040902080546001600160a01b03851691908390811061222157fe5b6000918252602090912001546001600160a01b031614156122ba57612244611770565b8261ffff168151811061225357fe5b6020908102919091018101516001546301000000900461ffff16600090815291829052604090912080548390811061228757fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506122c2565b6001016121e1565b5060015461ffff6301000000909104811660009081526020819052604090208054909183169081106122f057fe5b6000918252602080832090910180546001600160a01b031916905560015461ffff63010000009091041682528190526040902080549061233490600019830161295b565b505050565b6005015190565b600260015460ff16600481111561235357fe5b14612393576040805162461bcd60e51b815260206004820152601360248201526000805160206129de833981519152604482015290519081900360640190fd5b60008161ffff16116123e6576040805162461bcd60e51b8152602060048201526017602482015276496e76616c6964207468726573686f6c642076616c756560481b604482015290519081900360640190fd5b6001805461ffff630100000090910481166000908152602081905260409020909101805491909216600160601b0261ffff60601b19909116179055565b600260015460ff16600481111561243657fe5b14612476576040805162461bcd60e51b815260206004820152601360248201526000805160206129de833981519152604482015290519081900360640190fd5b60008161ffff16116124c4576040805162461bcd60e51b8152602060048201526012602482015271496e76616c69642072616e67652073697a6560701b604482015290519081900360640190fd5b6001805461ffff630100000090910481166000908152602081905260409020909101805491909216600160701b0261ffff60701b19909116179055565b6004015160011690565b600260015460ff16600481111561251e57fe5b1461255e576040805162461bcd60e51b815260206004820152601360248201526000805160206129de833981519152604482015290519081900360640190fd5b6001805461ffff6301000000909104166000908152602081905260409020018054911515600160801b0260ff60801b19909216919091179055565b600260015460ff1660048111156125ac57fe5b146125ec576040805162461bcd60e51b815260206004820152601360248201526000805160206129de833981519152604482015290519081900360640190fd5b6125f4610790565b61ffff166126006118ac565b61ffff161115612652576040805162461bcd60e51b815260206004820152601860248201527724b73b30b634b2103a343932b9b437b63210373ab6b132b960411b604482015290519081900360640190fd5b6001805460ff1916600317908190556040516301000000820461ffff90811692610100900416907ffb8e00e9d7c99f4d3070324ad79f8db723e140c6cea87362c8f92500d59d9f1490600090a3565b600360015460ff1660048111156126b457fe5b146126fc576040805162461bcd60e51b81526020600482015260136024820152724e6f7420696e206b657967656e20737461746560681b604482015290519081900360640190fd5b60018054600260ff199091161790819055604051630100000090910461ffff16907feb3dfac264ae50dc3d10ccdd0681a7d67ace6c32c31a924bb66884a5483bac4e90600090a2565b60378101516043909101519091565b600254604080516370a0823160e01b815230600482015290516001600160601b038416926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156127a757600080fd5b505afa1580156127bb573d6000803e3d6000fd5b505050506040513d60208110156127d157600080fd5b505110612868576002546040805163a9059cbb60e01b81526001600160a01b0385811660048301526001600160601b03851660248301529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561283657600080fd5b505af115801561284a573d6000803e3d6000fd5b505050506040513d602081101561286057600080fd5b50611be99050565b6002546040805163095ea7b360e01b81526001600160a01b0385811660048301526001600160601b03851660248301529151919092169163095ea7b39160448083019260209291908290030181600087803b1580156128c657600080fd5b505af11580156128da573d6000803e3d6000fd5b505050506040513d60208110156128f057600080fd5b50505050565b82805482825590600052602060002090810192821561294b579160200282015b8281111561294b57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612916565b5061295792915061297f565b5090565b815481835581811115612334576000838152602090206123349181019083016129a3565b6107ad91905b808211156129575780546001600160a01b0319168155600101612985565b6107ad91905b8082111561295757600081556001016129a956feea8fefdb9a5231578b5ca2511ea50329b34ea30f3f8912343d34118572a25b6e4e6f7420696e20766f74696e672073746174650000000000000000000000000046697273742065706f636820646f6573206e6f74206e6565642066756e6473207472616e73666572496e636f7272656374206d657373616765206c656e6774680000000000000000fcae04201d08bba7fae85b1facd3e4dfea5aa6f38c3a6b3101e8fb323ebdda82040709db3bd52c05ad5f79015b1cff2eb1d5566d788a4a0b514d1fb8a2c0b83e496e636f7272656374206d6573736167652065706f6368000000000000000000a265627a7a723058203d759ae2a0c23ff19b5c3a99deeb2fe6186bc87dcc7765dad0388cd51de42d6064736f6c63430005090032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101965760003560e01c8063073ce82d1461019b5780630b7f1665146101ba5780630c59d2bb146101d4578063120646e914610319578063197d6ca414610444578063200d2ed21461046a5780632310dd3c1461049657806327dd88d7146104b75780632a4b93af146104dd5780632dfaccc5146104e55780632fb0fc6f1461050157806333a4455a1461050957806340cddab31461052a57806346295bcf146105825780635197c7aa146105a35780635405d2ba146105ab57806355a373d6146105cc5780635f393b16146105f0578063686818191461061157806371abf071146106325780637bd13f541461066c5780638199d3fd146106e1578063900cf0cf146106e957806399b56ff8146106f1578063a5f18c011461070e578063a8311aa814610716578063aea0e78b1461071e578063b7ab4db514610726578063c2668caf1461072e578063caf0b74b14610736578063d087d28814610757578063d921f5301461075f578063e75235b814610767578063eda0e92a1461076f575b600080fd5b6101a3610790565b6040805161ffff9092168252519081900360200190f35b6101c26107b0565b60408051918252519081900360200190f35b6102fd600480360360408110156101ea57600080fd5b810190602081018135600160201b81111561020457600080fd5b82018360208201111561021657600080fd5b803590602001918460018302840111600160201b8311171561023757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561028957600080fd5b82018360208201111561029b57600080fd5b803590602001918460018302840111600160201b831117156102bc57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506107c8945050505050565b6040805192835261ffff90911660208301528051918290030190f35b6104426004803603604081101561032f57600080fd5b810190602081018135600160201b81111561034957600080fd5b82018360208201111561035b57600080fd5b803590602001918460018302840111600160201b8311171561037c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156103ce57600080fd5b8201836020820111156103e057600080fd5b803590602001918460018302840111600160201b8311171561040157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c7b945050505050565b005b6101a36004803603602081101561045a57600080fd5b50356001600160a01b0316611349565b6104726113ba565b6040518082600481111561048257fe5b60ff16815260200191505060405180910390f35b6101a3600480360360208110156104ac57600080fd5b503561ffff166113c3565b610442600480360360208110156104cd57600080fd5b50356001600160601b03166113e6565b6101a36116bc565b6104ed6116d4565b604080519115158252519081900360200190f35b6101a36116ec565b6101a36004803603602081101561051f57600080fd5b503561ffff1661175a565b610532611770565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561056e578181015183820152602001610556565b505050509050019250505060405180910390f35b6101a36004803603602081101561059857600080fd5b503561ffff1661178a565b6101c26117ad565b6104ed600480360360208110156105c157600080fd5b503561ffff166117c5565b6105d46117e8565b604080516001600160a01b039092168252519081900360200190f35b6101c26004803603602081101561060657600080fd5b503561ffff166117f7565b6101c26004803603602081101561062757600080fd5b503561ffff16611810565b6106536004803603602081101561064857600080fd5b503561ffff16611829565b6040805163ffffffff9092168252519081900360200190f35b61068d6004803603602081101561068257600080fd5b503561ffff16611848565b6040805163ffffffff998a1681529789166020890152959097168686015261ffff938416606087015291909216608085015290151560a084015260c083015260e08201929092529051908190036101000190f35b6101a36118ac565b6101a36118c6565b6104ed6004803603602081101561070757600080fd5b50356118d5565b6106536118ea565b6101a3611902565b6101a361191a565b61053261192b565b6101a3611943565b6106536004803603602081101561074c57600080fd5b503561ffff1661195d565b610653611983565b6104ed61199b565b6101a36119b5565b6105326004803603602081101561078557600080fd5b503561ffff166119cd565b6001546000906107aa906301000000900461ffff1661175a565b90505b90565b6001546000906107aa90610100900461ffff166117f7565b60008060418351816107d657fe5b0615610827576040805162461bcd60e51b815260206004820152601b60248201527a092dcc6dee4e4cac6e840e6d2cedcc2e8eae4cae640d8cadccee8d602b1b604482015290519081900360640190fd5b60008451600314156108ce578460405160200180807a19457468657265756d205369676e6564204d6573736167653a0a3360281b815250601b0182805190602001908083835b6020831061088c5780518252601f19909201916020918201910161086d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012090506109cf565b845160201415610931578460405160200180807b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b815250601c0182805190602001908083836020831061088c5780518252601f19909201916020918201910161086d565b845160431415610994578460405160200180807b19457468657265756d205369676e6564204d6573736167653a0a363760201b815250601c0182805190602001908083836020831061088c5780518252601f19909201916020918201910161086d565b6040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b60008181526003602052604090205460ff1615610a2c576040805162461bcd60e51b8152602060048201526016602482015275151e081dd85cc8185b1c9958591e481a185b991b195960521b604482015290519081900360640190fd5b600385015160015461ffff630100000090910481169082161115610a8e576040805162461bcd60e51b815260206004820152601460248201527324b73b30b634b21032b837b1b410373ab6b132b960611b604482015290519081900360640190fd5b60006041865181610a9b57fe5b049050610aa7826113c3565b61ffff16811015610af7576040805162461bcd60e51b81526020600482015260156024820152744e6f7420656e6f756768207369676e61747572657360581b604482015290519081900360640190fd5b6060610b02836119cd565b905060008080805b85811015610c695760006041820290508060208d01015194508060408d01015193508060608d01015160001a9250600060018a85888860405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610b97573d6000803e3d6000fd5b5050604051601f1901519150600090505b8751811015610c0c57816001600160a01b0316888281518110610bc757fe5b60200260200101516001600160a01b03161415610c0457878181518110610bea57fe5b6020026020010160006001600160a01b0316815250610c0c565b600101610ba8565b8751811415610c5e576040805162461bcd60e51b81526020600482015260196024820152784e6f7420612076616c696461746f72207369676e617475726560381b604482015290519081900360640190fd5b505050600101610b0a565b50959a94995093975050505050505050565b600080610c8884846107c8565b6000828152600360205260408120805460ff1916600117905586519294509092509085908290610cb457fe5b016020015160f81c600b811115610cc757fe5b9050600081600b811115610cd757fe5b1480610cee5750600a81600b811115610cec57fe5b145b15610d4a5760015461ffff83811663010000009092041614610d45576040805162461bcd60e51b81526020600482015260176024820152600080516020612a86833981519152604482015290519081900360640190fd5b610e00565b600b81600b811115610d5857fe5b1415610db05760015461ffff61010090910481169083161115610d45576040805162461bcd60e51b81526020600482015260176024820152600080516020612a86833981519152604482015290519081900360640190fd5b60015461ffff8381166101009092041614610e00576040805162461bcd60e51b81526020600482015260176024820152600080516020612a86833981519152604482015290519081900360640190fd5b600081600b811115610e0e57fe5b1415610e79578451604314610e58576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b600080610e6487611a3c565b91509150610e728282611a4b565b5050611342565b600181600b811115610e8757fe5b1415610ede578451600314610ed1576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b610ed9611bed565b611342565b600281600b811115610eec57fe5b1415610f3e578451600314610f36576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b610ed9611d29565b600381600b811115610f4c57fe5b1415610f9e578451600314610f96576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b610ed9611dbf565b600481600b811115610fac57fe5b1415611012578451602014610ff6576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b60006110018661202c565b905061100c81612033565b50611342565b600581600b81111561102057fe5b141561108057845160201461106a576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b60006110758661202c565b905061100c81612124565b600681600b81111561108e57fe5b14156110ee5784516020146110d8576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b60006110e386612339565b905061100c81612340565b600781600b8111156110fc57fe5b141561115c578451602014611146576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b600061115186612339565b905061100c81612423565b600881600b81111561116a57fe5b14156111ca5784516020146111b4576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b60006111bf86612501565b905061100c8161250b565b600981600b8111156111d857fe5b141561122a578451600314611222576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b610ed9612599565b600a81600b81111561123857fe5b141561128a578451600314611282576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b610ed96126a1565b600b81600b81111561129857fe5b14156112fc5784516043146112e2576040805162461bcd60e51b81526020600482015260186024820152600080516020612a26833981519152604482015290519081900360640190fd5b6000806112ee87612745565b91509150610e728282612754565b6040805162461bcd60e51b81526020600482015260166024820152752ab735b737bbb71036b2b9b9b0b3b29030b1ba34b7b760511b604482015290519081900360640190fd5b5050505050565b60006060611355611770565b905060005b611362610790565b61ffff168110156113ae57836001600160a01b031682828151811061138357fe5b60200260200101516001600160a01b031614156113a65760010191506113b59050565b60010161135a565b5060009150505b919050565b60015460ff1681565b61ffff908116600090815260208190526040902060010154600160601b90041690565b600060015460ff1660048111156113f957fe5b14611440576040805162461bcd60e51b81526020600482015260126024820152714e6f7420696e20726561647920737461746560701b604482015290519081900360640190fd5b6001546001600160601b03600160281b90910481169082161080159061147457506402540be400816001600160601b031610155b801561149657506001546001600160601b03600160881b909104811690821611155b61149f57600080fd5b60006114a96116bc565b61ffff166114b56118ea565b430363ffffffff16816114c457fe5b600154604080519390920460e081901b6001600160e01b03191660208086019190915261010090920460f01b6001600160f01b0319166024850152825180850360060181526026909401835283519382019390932060009081526004909152205490915060ff166115d857600180546040805160e085901b6001600160e01b0319166020808301919091526101009384900460f01b6001600160f01b03191660248301528251808303600601815260269092018352815191810191909120600090815260048252828120805460ff191686179055845461ffff94900493909316835282905290208101805463ffffffff60401b19811663ffffffff600160401b928390048116909401909316029190911790555b600254604080516323b872dd60e01b81523360048201523060248201526001600160601b038516604482015290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561163a57600080fd5b505af115801561164e573d6000803e3d6000fd5b505050506040513d602081101561166457600080fd5b507f31e108482b78b4d36dea7b82ed2a63a14bb1556d33d0e61a668f4282450970f2905082611691611983565b604080516001600160601b03909316835263ffffffff90911660208301528051918290030190a15050565b6001546000906107aa90610100900461ffff1661178a565b6001546000906107aa90610100900461ffff166117c5565b600060606116f861192b565b905060005b611705611902565b61ffff1681101561175157336001600160a01b031682828151811061172657fe5b60200260200101516001600160a01b031614156117495760010191506107ad9050565b6001016116fd565b50600091505090565b61ffff1660009081526020819052604090205490565b6001546060906107aa906301000000900461ffff166119cd565b61ffff908116600090815260208190526040902060010154600160701b90041690565b6001546000906107aa90610100900461ffff16611810565b61ffff16600090815260208190526040902060010154600160801b900460ff1690565b6002546001600160a01b031681565b61ffff1660009081526020819052604090206003015490565b61ffff1660009081526020819052604090206002015490565b61ffff1660009081526020819052604090206001015463ffffffff1690565b60006020819052908152604090206001810154600282015460039092015463ffffffff80831693600160201b8404821693600160401b810490921692600160601b830461ffff90811693600160701b810490911692600160801b90910460ff169188565b6001546000906107aa906301000000900461ffff166113c3565b600154610100900461ffff1681565b60036020526000908152604090205460ff1681565b6001546000906107aa90610100900461ffff16611829565b6001546000906107aa90610100900461ffff1661175a565b6001546301000000900461ffff1681565b6001546060906107aa90610100900461ffff166119cd565b6001546000906107aa906301000000900461ffff1661178a565b61ffff16600090815260208190526040902060010154600160401b900463ffffffff1690565b6001546000906107aa90610100900461ffff1661195d565b6001546000906107aa906301000000900461ffff166117c5565b6001546000906107aa90610100900461ffff166113c3565b61ffff811660009081526020818152604091829020805483518184028101840190945280845260609392830182828015611a3057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611a12575b50505050509050919050565b60238101516043909101519091565b600360015460ff166004811115611a5e57fe5b14611aa6576040805162461bcd60e51b81526020600482015260136024820152724e6f7420696e206b657967656e20737461746560681b604482015290519081900360640190fd5b6001805461ffff630100000091829004811660009081526020819052604080822060020187905584548490048316825280822060030186905584548490048316825290208301805463ffffffff60401b191663ffffffff60401b179055825491909104161415611b9b576001805460ff191680825563010000009081900461ffff908116600090815260208181526040918290208501805463ffffffff19164363ffffffff16179055845462ffff0019811661010095909104841685021794859055815187815290810186905281519390940490911692600080516020612a46833981519152929081900390910190a2611be9565b6001805460ff1916600417908190556040516301000000820461ffff90811692610100900416907fb54ecb66a176f6f9932a576abe0b1671de59cf93398c93922abbcdedb4daa9ae90600090a35b5050565b600460015460ff166004811115611c0057fe5b14611c50576040805162461bcd60e51b815260206004820152601b60248201527a4e6f7420696e2066756e6473207472616e7366657220737461746560281b604482015290519081900360640190fd5b600154610100900461ffff16611c975760405162461bcd60e51b81526004018080602001828103825260288152602001806129fe6028913960400191505060405180910390fd5b6001805460ff191680825563010000009081900461ffff90811660009081526020819052604090208301805463ffffffff19164363ffffffff16179055825462ffff0019811661010093909104821683021792839055910416600080516020612a46833981519152611d076117ad565b611d0f6107b0565b6040805192835260208301919091528051918290030190a2565b6001805460ff166004811115611d3b57fe5b14611d8a576040805162461bcd60e51b815260206004820152601a6024820152794e6f7420696e20636c6f73696e672065706f636820737461746560301b604482015290519081900360640190fd5b60018054600260ff19909116179081905560405161010090910461ffff16906000805160206129be83398151915290600090a2565b600060015460ff166004811115611dd257fe5b14611e19576040805162461bcd60e51b81526020600482015260126024820152714e6f7420696e20726561647920737461746560701b604482015290519081900360640190fd5b60018054610100900461ffff90811660009081526020819052604090208201805463ffffffff60201b1916600160201b4363ffffffff1602179055815464ffff0000001981166301000000918290048316840190921602179055611e7b6119b5565b600180546301000000900461ffff9081166000908152602081905260409020909101805461ffff60601b1916600160601b9390921692909202179055611ebf61192b565b6001546301000000900461ffff166000908152602081815260409091208251611eee93919291909101906128f6565b50611ef76116bc565b600180546301000000900461ffff9081166000908152602081905260409020909101805461ffff60701b1916600160701b9390921692909202179055611f3b6116d4565b6001805461ffff6301000000909104166000908152602081905260409020018054911515600160801b0260ff60801b19909216919091179055611f7c6116d4565b15611fe0576001805460ff191681179055604051600080516020612a6683398151915290600090a160015460405161010090910461ffff16907fe143ea1b9fab2f5402f146a5618fb1cd40b4b03d37a0b98d3b62a706affbcc7290600090a261202a565b6001805460ff19166002179055604051600080516020612a6683398151915290600090a160015460405161010090910461ffff16906000805160206129be83398151915290600090a25b565b6017015190565b600260015460ff16600481111561204657fe5b14612086576040805162461bcd60e51b815260206004820152601360248201526000805160206129de833981519152604482015290519081900360640190fd5b61208f81611349565b61ffff16156120db576040805162461bcd60e51b815260206004820152601360248201527220b63932b0b23c9030903b30b634b230ba37b960691b604482015290519081900360640190fd5b600180546301000000900461ffff16600090815260208181526040822080549384018155825290200180546001600160a01b0319166001600160a01b0392909216919091179055565b600260015460ff16600481111561213757fe5b14612177576040805162461bcd60e51b815260206004820152601360248201526000805160206129de833981519152604482015290519081900360640190fd5b61218081611349565b61ffff166121cf576040805162461bcd60e51b815260206004820152601760248201527620b63932b0b23c903737ba1030903b30b634b230ba37b960491b604482015290519081900360640190fd5b600060016121db610790565b03905060005b8161ffff168110156122c2576001546301000000900461ffff16600090815260208190526040902080546001600160a01b03851691908390811061222157fe5b6000918252602090912001546001600160a01b031614156122ba57612244611770565b8261ffff168151811061225357fe5b6020908102919091018101516001546301000000900461ffff16600090815291829052604090912080548390811061228757fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506122c2565b6001016121e1565b5060015461ffff6301000000909104811660009081526020819052604090208054909183169081106122f057fe5b6000918252602080832090910180546001600160a01b031916905560015461ffff63010000009091041682528190526040902080549061233490600019830161295b565b505050565b6005015190565b600260015460ff16600481111561235357fe5b14612393576040805162461bcd60e51b815260206004820152601360248201526000805160206129de833981519152604482015290519081900360640190fd5b60008161ffff16116123e6576040805162461bcd60e51b8152602060048201526017602482015276496e76616c6964207468726573686f6c642076616c756560481b604482015290519081900360640190fd5b6001805461ffff630100000090910481166000908152602081905260409020909101805491909216600160601b0261ffff60601b19909116179055565b600260015460ff16600481111561243657fe5b14612476576040805162461bcd60e51b815260206004820152601360248201526000805160206129de833981519152604482015290519081900360640190fd5b60008161ffff16116124c4576040805162461bcd60e51b8152602060048201526012602482015271496e76616c69642072616e67652073697a6560701b604482015290519081900360640190fd5b6001805461ffff630100000090910481166000908152602081905260409020909101805491909216600160701b0261ffff60701b19909116179055565b6004015160011690565b600260015460ff16600481111561251e57fe5b1461255e576040805162461bcd60e51b815260206004820152601360248201526000805160206129de833981519152604482015290519081900360640190fd5b6001805461ffff6301000000909104166000908152602081905260409020018054911515600160801b0260ff60801b19909216919091179055565b600260015460ff1660048111156125ac57fe5b146125ec576040805162461bcd60e51b815260206004820152601360248201526000805160206129de833981519152604482015290519081900360640190fd5b6125f4610790565b61ffff166126006118ac565b61ffff161115612652576040805162461bcd60e51b815260206004820152601860248201527724b73b30b634b2103a343932b9b437b63210373ab6b132b960411b604482015290519081900360640190fd5b6001805460ff1916600317908190556040516301000000820461ffff90811692610100900416907ffb8e00e9d7c99f4d3070324ad79f8db723e140c6cea87362c8f92500d59d9f1490600090a3565b600360015460ff1660048111156126b457fe5b146126fc576040805162461bcd60e51b81526020600482015260136024820152724e6f7420696e206b657967656e20737461746560681b604482015290519081900360640190fd5b60018054600260ff199091161790819055604051630100000090910461ffff16907feb3dfac264ae50dc3d10ccdd0681a7d67ace6c32c31a924bb66884a5483bac4e90600090a2565b60378101516043909101519091565b600254604080516370a0823160e01b815230600482015290516001600160601b038416926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156127a757600080fd5b505afa1580156127bb573d6000803e3d6000fd5b505050506040513d60208110156127d157600080fd5b505110612868576002546040805163a9059cbb60e01b81526001600160a01b0385811660048301526001600160601b03851660248301529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561283657600080fd5b505af115801561284a573d6000803e3d6000fd5b505050506040513d602081101561286057600080fd5b50611be99050565b6002546040805163095ea7b360e01b81526001600160a01b0385811660048301526001600160601b03851660248301529151919092169163095ea7b39160448083019260209291908290030181600087803b1580156128c657600080fd5b505af11580156128da573d6000803e3d6000fd5b505050506040513d60208110156128f057600080fd5b50505050565b82805482825590600052602060002090810192821561294b579160200282015b8281111561294b57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612916565b5061295792915061297f565b5090565b815481835581811115612334576000838152602090206123349181019083016129a3565b6107ad91905b808211156129575780546001600160a01b0319168155600101612985565b6107ad91905b8082111561295757600081556001016129a956feea8fefdb9a5231578b5ca2511ea50329b34ea30f3f8912343d34118572a25b6e4e6f7420696e20766f74696e672073746174650000000000000000000000000046697273742065706f636820646f6573206e6f74206e6565642066756e6473207472616e73666572496e636f7272656374206d657373616765206c656e6774680000000000000000fcae04201d08bba7fae85b1facd3e4dfea5aa6f38c3a6b3101e8fb323ebdda82040709db3bd52c05ad5f79015b1cff2eb1d5566d788a4a0b514d1fb8a2c0b83e496e636f7272656374206d6573736167652065706f6368000000000000000000a265627a7a723058203d759ae2a0c23ff19b5c3a99deeb2fe6186bc87dcc7765dad0388cd51de42d6064736f6c63430005090032",
  "sourceMap": "124:1556:1:-;;;270:846;8:9:-1;5:2;;;30:1;27;20:12;5:2;270:846:1;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;270:846:1;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;;270:846:1;;;;;;;;;;;;492:17;;270:846;;-1:-1:-1;270:846:1;;-1:-1:-1;270:846:1;;;;;;484:30;;;;;;545:10;:17;532:9;:30;;;;524:39;;;;;;574:13;:38;;-1:-1:-1;;;;;;574:38:1;-1:-1:-1;;;;;574:38:1;;;;;-1:-1:-1;623:9:1;;651:13;-1:-1:-1;;642:22:1;;;;-1:-1:-1;;674:13:1;;;;;;;;;718:296;;;;;;;;;;;-1:-1:-1;718:296:1;;;;;;;;;;;;;;;;;;674:13;718:296;;;;;;;;;;;;;;;;;;;;;;;;;;;674:13;718:296;;;;;705:9;;;;;;;698:17;;;;;;;:316;;;;718:296;;698:17;;:316;;:17;;:316;;;:::i;:::-;-1:-1:-1;698:316:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;698:316:1;;;;;;;;-1:-1:-1;;;;698:316:1;;;;;;;;;;;;;-1:-1:-1;;;;698:316:1;;;;;;;;;;;-1:-1:-1;;;;698:316:1;;;;;;;;-1:-1:-1;;;;698:316:1;;;;;;;;;;;;;;-1:-1:-1;;;;698:316:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1038:9;;1025:22;;1070:9;;;;-1:-1:-1;;;;;1057:22:1;;;;;1025;;;;-1:-1:-1;;;;;;;;1025:22:1;;;;;;;-1:-1:-1;;;;;;;;1057:22:1;;;;1095:14;-1:-1:-1;;1095:14:1;;-1:-1:-1;;1095:14:1;270:846;;;;;;124:1556;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;124:1556:1;-1:-1:-1;;;;;124:1556:1;;;;;;;;;;;-1:-1:-1;124:1556:1;;;;;;;-1:-1:-1;124:1556:1;;;-1:-1:-1;124:1556:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;124:1556:1;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "124:1556:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;124:1556:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1994:100:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3516:78;;;:::i;:::-;;;;;;;;;;;;;;;;3739:1992:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3739:1992:4;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3739:1992:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3739:1992:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3739:1992:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3739:1992:4;;;;;;;;-1:-1:-1;3739:1992:4;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;3739:1992:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3739:1992:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3739:1992:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3739:1992:4;;-1:-1:-1;3739:1992:4;;-1:-1:-1;;;;;3739:1992:4:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;238:3495;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;238:3495:4;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;238:3495:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;238:3495:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;238:3495:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;238:3495:4;;;;;;;;-1:-1:-1;238:3495:4;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;238:3495:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;238:3495:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;238:3495:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;238:3495:4;;-1:-1:-1;238:3495:4;;-1:-1:-1;;;;;238:3495:4:i;:::-;;4314:286:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4314:286:0;-1:-1:-1;;;;;4314:286:0;;:::i;1168:20::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2446:114;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2446:114:0;;;;:::i;1122:556:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1122:556:1;-1:-1:-1;;;;;1122:556:1;;:::i;2792:96:0:-;;;:::i;3702:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;4034:274;;;:::i;2100:128::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2100:128:0;;;;:::i;4720:116::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4720:116:0;;;;;;;;;;;;;;;;;3004:114;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3004:114:0;;;;:::i;3330:78::-;;;:::i;3914:114::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3914:114:0;;;;:::i;1297:27::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1297:27:0;;;;;;;;;;;;;;3600:96;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3600:96:0;;;;:::i;3414:::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3414:96:0;;;;:::i;2670:116::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2670:116:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1123:38;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1123:38:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2336:104;;;:::i;1195:19::-;;;:::i;184:47:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;184:47:4;;:::i;2566:98:0:-;;;:::i;1896:92::-;;;:::i;1220:23::-;;;:::i;4606:108::-;;;:::i;2894:104::-;;;:::i;3218:106::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3218:106:0;;;;:::i;3124:88::-;;;:::i;3804:104::-;;;:::i;2234:96::-;;;:::i;4842:126::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4842:126:0;;;;:::i;1994:100::-;2077:9;;2041:6;;2066:21;;2077:9;;;;;2066:10;:21::i;:::-;2059:28;;1994:100;;:::o;3516:78::-;3581:5;;3553:4;;3576:11;;3581:5;;;;;3576:4;:11::i;3739:1992:4:-;3835:7;3844:6;175:2;3870:10;:17;:34;;;;;;:39;3862:79;;;;;-1:-1:-1;;;3862:79:4;;;;;;;;;;;;-1:-1:-1;;;3862:79:4;;;;;;;;;;;;;;;3952:15;3981:7;:14;3999:1;3981:19;3977:474;;;4088:7;4036:60;;;;;;-1:-1:-1;;;4036:60:4;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4036:60:4;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4036:60:4;;;4026:71;;;;;;4016:81;;3977:474;;;4118:7;:14;4136:2;4118:20;4114:337;;;4227:7;4174:61;;;;;;-1:-1:-1;;;4174:61:4;;;;;;;;;;;;;;;66:2:-1;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;4114:337:4;4257:7;:14;4275:2;4257:20;4253:198;;;4366:7;4313:61;;;;;;-1:-1:-1;;;4313:61:4;;;;;;;;;;;;;;;66:2:-1;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;4253:198:4;4406:34;;;-1:-1:-1;;;4406:34:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4406:34:4;;;;;;;;;;;;;;4253:198;4469:24;;;;:15;:24;;;;;;;;4468:25;4460:60;;;;;-1:-1:-1;;;4460:60:4;;;;;;;;;;;;-1:-1:-1;;;4460:60:4;;;;;;;;;;;;;;;4610:1;4597:15;;4591:22;4652:9;;;;;;;;;4640:21;;;;;4632:54;;;;;-1:-1:-1;;;4632:54:4;;;;;;;;;;;;-1:-1:-1;;;4632:54:4;;;;;;;;;;;;;;;4697:18;175:2;4718:10;:17;:34;;;;;;4697:55;;4787:22;4800:8;4787:12;:22::i;:::-;4770:39;;:13;:39;;4762:73;;;;;-1:-1:-1;;;4762:73:4;;;;;;;;;;;;-1:-1:-1;;;4762:73:4;;;;;;;;;;;;;;;4846:35;4884:23;4898:8;4884:13;:23::i;:::-;4846:61;-1:-1:-1;4918:9:4;;;;4974:715;4995:13;4991:1;:17;4974:715;;;5029:11;175:2;5043:1;:18;5029:32;;5139:6;5134:2;5122:10;5118:19;5114:32;5108:39;5103:44;;5200:6;5195:2;5183:10;5179:19;5175:32;5169:39;5164:44;;5269:6;5264:2;5252:10;5248:19;5244:32;5238:39;5235:1;5230:48;5225:53;;5306:14;5323:27;5333:7;5342:1;5345;5348;5323:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5323:27:4;;-1:-1:-1;;5323:27:4;;;-1:-1:-1;5364:6:4;;-1:-1:-1;5384:213:4;5400:18;:25;5396:1;:29;5384:213;;;5479:6;-1:-1:-1;;;;;5454:31:4;:18;5473:1;5454:21;;;;;;;;;;;;;;-1:-1:-1;;;;;5454:31:4;;5450:133;;;5516:18;5535:1;5516:21;;;;;;;;;;;;;5509:28;-1:-1:-1;;;;;5509:28:4;;;;5559:5;;5450:133;5427:3;;5384:213;;;5623:18;:25;5618:1;:30;;5610:68;;;;;-1:-1:-1;;;5610:68:4;;;;;;;;;;;;-1:-1:-1;;;5610:68:4;;;;;;;;;;;;;;;-1:-1:-1;;;5010:3:4;;4974:715;;;-1:-1:-1;5706:7:4;;5715:8;;-1:-1:-1;3739:1992:4;;-1:-1:-1;;;;;;;;3739:1992:4:o;238:3495::-;325:15;342;361:39;380:7;389:10;361:18;:39::i;:::-;410:24;;;;:15;:24;;;;;:31;;-1:-1:-1;;410:31:4;437:4;410:31;;;484:10;;324:76;;-1:-1:-1;324:76:4;;-1:-1:-1;410:24:4;484:7;;410:24;;484:10;;;;;;;;;;471:25;;;;;;;;452:44;-1:-1:-1;524:21:4;511:9;:34;;;;;;;;;:76;;;-1:-1:-1;562:25:4;549:9;:38;;;;;;;;;511:76;507:366;;;623:9;;;611:21;;;623:9;;;;;611:21;603:57;;;;;-1:-1:-1;;;603:57:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;603:57:4;;;;;;;;;;;;;;;507:366;;;694:15;681:9;:28;;;;;;;;;677:196;;;745:5;;;;;;;;;733:17;;;;;725:53;;;;;-1:-1:-1;;;725:53:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;725:53:4;;;;;;;;;;;;;;677:196;829:5;;;817:17;;;829:5;;;;;817:17;809:53;;;;;-1:-1:-1;;;809:53:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;809:53:4;;;;;;;;;;;;;;;900:21;887:9;:34;;;;;;;;;883:2844;;;984:7;:14;1002:2;984:20;976:57;;;;;-1:-1:-1;;;976:57:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;976:57:4;;;;;;;;;;;;;;;1048:6;1056;1066:22;1080:7;1066:13;:22::i;:::-;1047:41;;;;1102:20;1117:1;1120;1102:14;:20::i;:::-;883:2844;;;;;1156:29;1143:9;:42;;;;;;;;;1139:2588;;;1209:7;:14;1227:1;1209:19;1201:56;;;;;-1:-1:-1;;;1201:56:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1201:56:4;;;;;;;;;;;;;;;1271:23;:21;:23::i;:::-;1139:2588;;;1328:26;1315:9;:39;;;;;;;;;1311:2416;;;1378:7;:14;1396:1;1378:19;1370:56;;;;;-1:-1:-1;;;1370:56:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1370:56:4;;;;;;;;;;;;;;;1440:20;:18;:20::i;1311:2416::-;1494:24;1481:9;:37;;;;;;;;;1477:2250;;;1542:7;:14;1560:1;1542:19;1534:56;;;;;-1:-1:-1;;;1534:56:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1534:56:4;;;;;;;;;;;;;;;1604:14;:12;:14::i;1477:2250::-;1652:25;1639:9;:38;;;;;;;;;1635:2092;;;1755:7;:14;1773:2;1755:20;1747:57;;;;;-1:-1:-1;;;1747:57:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1747:57:4;;;;;;;;;;;;;;;1818:17;1838:23;1853:7;1838:14;:23::i;:::-;1818:43;;1875:24;1889:9;1875:13;:24::i;:::-;1635:2092;;;;1933:28;1920:9;:41;;;;;;;;;1916:1811;;;2039:7;:14;2057:2;2039:20;2031:57;;;;;-1:-1:-1;;;2031:57:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2031:57:4;;;;;;;;;;;;;;;2102:17;2122:23;2137:7;2122:14;:23::i;:::-;2102:43;;2159:27;2176:9;2159:16;:27::i;1916:1811::-;2220:28;2207:9;:41;;;;;;;;;2203:1524;;;2326:7;:14;2344:2;2326:20;2318:57;;;;;-1:-1:-1;;;2318:57:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2318:57:4;;;;;;;;;;;;;;;2389:16;2408:22;2422:7;2408:13;:22::i;:::-;2389:41;;2444:27;2461:9;2444:16;:27::i;2203:1524::-;2505:29;2492:9;:42;;;;;;;;;2488:1239;;;2612:7;:14;2630:2;2612:20;2604:57;;;;;-1:-1:-1;;;2604:57:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2604:57:4;;;;;;;;;;;;;;;2675:16;2694:22;2708:7;2694:13;:22::i;:::-;2675:41;;2730:27;2747:9;2730:16;:27::i;2488:1239::-;2791:30;2778:9;:43;;;;;;;;;2774:953;;;2898:7;:14;2916:2;2898:20;2890:57;;;;;-1:-1:-1;;;2890:57:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2890:57:4;;;;;;;;;;;;;;;2961:15;2979:23;2994:7;2979:14;:23::i;:::-;2961:41;;3016:29;3034:10;3016:17;:29::i;2774:953::-;3079:24;3066:9;:37;;;;;;;;;3062:665;;;3127:7;:14;3145:1;3127:19;3119:56;;;;;-1:-1:-1;;;3119:56:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3119:56:4;;;;;;;;;;;;;;;3189:14;:12;:14::i;3062:665::-;3237:25;3224:9;:38;;;;;;;;;3220:507;;;3286:7;:14;3304:1;3286:19;3278:56;;;;;-1:-1:-1;;;3278:56:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3278:56:4;;;;;;;;;;;;;;;3348:15;:13;:15::i;3220:507::-;3397:15;3384:9;:28;;;;;;;;;3380:347;;;3503:7;:14;3521:2;3503:20;3495:57;;;;;-1:-1:-1;;;3495:57:4;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3495:57:4;;;;;;;;;;;;;;;3567:10;3579:12;3595:24;3611:7;3595:15;:24::i;:::-;3566:53;;;;3633:20;3643:2;3647:5;3633:9;:20::i;3380:347::-;3684:32;;;-1:-1:-1;;;3684:32:4;;;;;;;;;;;;-1:-1:-1;;;3684:32:4;;;;;;;;;;;;;;3380:347;238:3495;;;;;:::o;4314:286:0:-;4370:6;4388:27;4418:19;:17;:19::i;:::-;4388:49;-1:-1:-1;4452:6:0;4447:129;4468:16;:14;:16::i;:::-;4464:20;;:1;:20;4447:129;;;4526:1;-1:-1:-1;;;;;4509:18:0;:10;4520:1;4509:13;;;;;;;;;;;;;;-1:-1:-1;;;;;4509:18:0;;4505:60;;;4563:1;4559:5;;-1:-1:-1;4545:20:0;;-1:-1:-1;4545:20:0;4505:60;4486:3;;4447:129;;;;4592:1;4585:8;;;4314:286;;;;:::o;1168:20::-;;;;;;:::o;2446:114::-;2529:14;;;;2504:6;2529:14;;;;;;;;;;:24;;;-1:-1:-1;;;2529:24:0;;;;2446:114::o;1122:556:1:-;1374:12:0;1364:6;;;;:22;;;;;;;;;1356:53;;;;;-1:-1:-1;;;1356:53:0;;;;;;;;;;;;-1:-1:-1;;;1356:53:0;;;;;;;;;;;;;;;1194:10:1;;-1:-1:-1;;;;;;;;1194:10:1;;;;;1185:19;;;;;;;:40;;;1217:8;1208:5;-1:-1:-1;;;;;1208:17:1;;;1185:40;:63;;;;-1:-1:-1;1238:10:1;;-1:-1:-1;;;;;;;;1238:10:1;;;;;1229:19;;;;;1185:63;1177:72;;;;;;1260:14;1327;:12;:14::i;:::-;1320:22;;1301:15;:13;:15::i;:::-;1285:12;1278:38;1277:65;;;;;;;1412:5;;1386:32;;;1277:65;;;;1386:32;;;;-1:-1:-1;;;;;;1386:32:1;;;;;;;;;1412:5;;;;1386:32;;-1:-1:-1;;;;;;1386:32:1;;;;;;;26:21:-1;;;22:32;;6:49;;1386:32:1;;;;;;1376:43;;;;;;;;;-1:-1:-1;1357:63:1;;;:18;:63;;;;;1277:65;;-1:-1:-1;1357:63:1;;1352:200;;1502:4;1491:5;;1465:32;;;;;;;-1:-1:-1;;;;;;1465:32:1;;;;;;;;;1491:5;;;;;1465:32;;-1:-1:-1;;;;;;1465:32:1;;;;;;;26:21:-1;;;22:32;;6:49;;1465:32:1;;;;;;1455:43;;;;;;;;;-1:-1:-1;1436:63:1;;;:18;:63;;;;;:70;;-1:-1:-1;;1436:70:1;;;;;1527:5;;1491;1527;;;;;;;1520:13;;;;;;;:19;;:21;;-1:-1:-1;;;;1520:21:1;;1465:32;-1:-1:-1;;;1520:21:1;;;;;;;;;;;;;;;;;;;1352:200;1562:13;;:60;;;-1:-1:-1;;;1562:60:1;;1589:10;1562:60;;;;1609:4;1562:60;;;;-1:-1:-1;;;;;1562:60:1;;;;;;;;-1:-1:-1;;;;;1562:13:1;;;;:26;;:60;;;;;;;;;;;;;;;:13;;:60;;;5:2:-1;;;;30:1;27;20:12;5:2;1562:60:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1562:60:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1637:34:1;;-1:-1:-1;1653:5:1;1660:10;:8;:10::i;:::-;1637:34;;;-1:-1:-1;;;;;1637:34:1;;;;;;;;;;;;;;;;;;;;;;1419:1:0;1122:556:1;:::o;2792:96:0:-;2875:5;;2837:6;;2862:19;;2875:5;;;;;2862:12;:19::i;3702:96::-;3785:5;;3748:4;;3771:20;;3785:5;;;;;3771:13;:20::i;4034:274::-;4077:6;4095:27;4125:15;:13;:15::i;:::-;4095:45;-1:-1:-1;4155:6:0;4150:134;4171:12;:10;:12::i;:::-;4167:16;;:1;:16;4150:134;;;4225:10;-1:-1:-1;;;;;4208:27:0;:10;4219:1;4208:13;;;;;;;;;;;;;;-1:-1:-1;;;;;4208:27:0;;4204:69;;;4271:1;4267:5;;-1:-1:-1;4253:20:0;;-1:-1:-1;4253:20:0;4204:69;4185:3;;4150:134;;;;4300:1;4293:8;;;4034:274;:::o;2100:128::-;2188:14;;2156:6;2188:14;;;;;;;;;;:32;;2100:128::o;4720:116::-;4819:9;;4770:16;;4805:24;;4819:9;;;;;4805:13;:24::i;3004:114::-;3087:14;;;;3062:6;3087:14;;;;;;;;;;:24;;;-1:-1:-1;;;3087:24:0;;;;3004:114::o;3330:78::-;3395:5;;3367:4;;3390:11;;3395:5;;;;;3390:4;:11::i;3914:114::-;3996:14;;3973:4;3996:14;;;;;;;;;;:25;;;-1:-1:-1;;;3996:25:0;;;;;3914:114::o;1297:27::-;;;-1:-1:-1;;;;;1297:27:0;;:::o;3600:96::-;3673:14;;3650:4;3673:14;;;;;;;;;;:16;;;;3600:96::o;3414:::-;3487:14;;3464:4;3487:14;;;;;;;;;;:16;;;;3414:96::o;2670:116::-;2754:14;;2729:6;2754:14;;;;;;;;;;:25;;;;;;2670:116::o;1123:38::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1123:38:0;;;;;-1:-1:-1;;;1123:38:0;;;;;;-1:-1:-1;;;1123:38:0;;;;;;;-1:-1:-1;;;1123:38:0;;;;;;-1:-1:-1;;;1123:38:0;;;;;;;:::o;2336:104::-;2423:9;;2385:6;;2410:23;;2423:9;;;;;2410:12;:23::i;1195:19::-;;;;;;;;;:::o;184:47:4:-;;;;;;;;;;;;;;;:::o;2566:98:0:-;2651:5;;2612:6;;2637:20;;2651:5;;;;;2637:13;:20::i;1896:92::-;1975:5;;1939:6;;1964:17;;1975:5;;;;;1964:10;:17::i;1220:23::-;;;;;;;;;:::o;4606:108::-;4701:5;;4652:16;;4687:20;;4701:5;;;;;4687:13;:20::i;2894:104::-;2981:9;;2943:6;;2968:23;;2981:9;;;;;2968:12;:23::i;3218:106::-;3297:14;;3272:6;3297:14;;;;;;;;;;:20;;;-1:-1:-1;;;3297:20:0;;;;;3218:106::o;3124:88::-;3199:5;;3165:6;;3190:15;;3199:5;;;;;3190:8;:15::i;3804:104::-;3891:9;;3854:4;;3877:24;;3891:9;;;;;3877:13;:24::i;2234:96::-;2317:5;;2279:6;;2304:19;;2317:5;;;;;2304:12;:19::i;4842:126::-;4936:14;;;:6;:14;;;;;;;;;;;;4929:32;;;;;;;;;;;;;;;;;4901:16;;4929:32;;;4936:14;4929:32;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4929:32:0;;;;;;;;;;;;;;;;;;;;;;;4842:126;;;:::o;615:202:3:-;756:2;743:16;;737:23;797:2;784:16;;;778:23;737;;718:93::o;459:511:2:-;1707:13:0;1697:6;;;;:23;;;;;;;;;1689:55;;;;;-1:-1:-1;;;1689:55:0;;;;;;;;;;;;-1:-1:-1;;;1689:55:0;;;;;;;;;;;;;;;532:9:2;;;;;;;;;;;525:6;:17;;;;;;;;;;;:19;;:23;;;565:9;;;;;;;558:17;;;;;532:9;558:19;:23;;;598:9;;;;;;;591:17;;;;:23;;:37;;-1:-1:-1;;;;591:37:2;-1:-1:-1;;;591:37:2;;;642:9;;;;;;;:14;638:326;;;672:6;:21;;-1:-1:-1;;672:21:2;;;;714:9;;;;;;;;;-1:-1:-1;707:17:2;;;;;;;;;;;;:28;;:51;;-1:-1:-1;;707:51:2;745:12;707:51;;;;;780:9;;-1:-1:-1;;772:17:2;;714:9;780;;;;;;772:17;;;;;;;808:23;;;;;;;;;;;;;819:5;;;;;;;;-1:-1:-1;;;;;;;;;;;808:23:2;;;;;;;;;;638:326;;;870:6;:30;;-1:-1:-1;;870:30:2;879:21;870:30;;;;;919:34;;943:9;;;;;;;;;936:5;;;;919:34;;-1:-1:-1;;919:34:2;638:326;459:511;;:::o;976:303::-;1819:21:0;1809:6;;;;:31;;;;;;;;;1801:71;;;;;-1:-1:-1;;;1801:71:0;;;;;;;;;;;;-1:-1:-1;;;1801:71:0;;;;;;;;;;;;;;;1050:5:2;;;;;;;1042:62;;;;-1:-1:-1;;;1042:62:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1115:6;:21;;-1:-1:-1;;1115:21:2;;;;1153:9;;;;;;;;;-1:-1:-1;1146:17:2;;;;;;;;;;:28;;:51;;-1:-1:-1;;1146:51:2;1184:12;1146:51;;;;;1215:9;;-1:-1:-1;;1207:17:2;;1153:9;1215;;;;;;1207:17;;;;;;;1250:5;;;-1:-1:-1;;;;;;;;;;;1257:6:2;:4;:6::i;:::-;1265;:4;:6::i;:::-;1239:33;;;;;;;;;;;;;;;;;;;;;;976:303::o;1285:121::-;1483:20:0;1473:6;;;;:30;;;;;;;;;1465:69;;;;;-1:-1:-1;;;1465:69:0;;;;;;;;;;;;-1:-1:-1;;;1465:69:0;;;;;;;;;;;;;;;1347:6:2;:22;;1356:13;-1:-1:-1;;1347:22:2;;;;;;;;1384:15;;1393:5;;;;;;;-1:-1:-1;;;;;;;;;;;1384:15:2;-1:-1:-1;;1384:15:2;1285:121::o;1412:610::-;1374:12:0;1364:6;;;;:22;;;;;;;;;1356:53;;;;;-1:-1:-1;;;1356:53:0;;;;;;;;;;;;-1:-1:-1;;;1356:53:0;;;;;;;;;;;;;;;1468:5:2;;;;;;;;;;1461:6;:13;;;;;;;;;;:22;;:45;;-1:-1:-1;;;;1461:45:2;-1:-1:-1;;;1493:12:2;1461:45;;;;;;1516:11;;-1:-1:-1;;1516:11:2;;;;;;;;;;;;;;;;;;1567:14;:12;:14::i;:::-;1544:9;;;;;;;;;;1537:6;:17;;;;;;;;;;:27;;;:44;;-1:-1:-1;;;;1537:44:2;-1:-1:-1;;;1537:44:2;;;;;;;;;;;1622:15;:13;:15::i;:::-;1598:9;;;;;;;1591:6;:17;;;;;;;;;;;:46;;;;:17;;:46;;;;;;:::i;:::-;;1677:14;:12;:14::i;:::-;1654:9;;;;;;;;;;1647:6;:17;;;;;;;;;;:27;;;:44;;-1:-1:-1;;;;1647:44:2;-1:-1:-1;;;1647:44:2;;;;;;;;;;;1732:15;:13;:15::i;:::-;1708:9;;;;;;;;;1701:6;:17;;;;;;;;;;:28;:46;;;;;-1:-1:-1;;;1701:46:2;-1:-1:-1;;;;1701:46:2;;;;;;;;;1762:15;:13;:15::i;:::-;1758:258;;;1802:20;1793:29;;-1:-1:-1;;1793:29:2;;;;;1841:11;;-1:-1:-1;;;;;;;;;;;1841:11:2;-1:-1:-1;;1841:11:2;1882:5;;1871:17;;1882:5;;;;;;;1871:17;;;;;1758:258;;;1919:6;:22;;-1:-1:-1;;1919:22:2;1928:13;1919:22;;;1960:11;;-1:-1:-1;;;;;;;;;;;1960:11:2;-1:-1:-1;;1960:11:2;1999:5;;1990:15;;1999:5;;;;;;;-1:-1:-1;;;;;;;;;;;1990:15:2;;;;1758:258;1412:610::o;452:157:3:-;589:2;576:16;570:23;;551:52::o;2028:192:2:-;1602:13:0;1592:6;;;;:23;;;;;;;;;1584:55;;;;;-1:-1:-1;;;1584:55:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1584:55:0;;;;;;;;;;;;;;;2104:25:2;2119:9;2104:14;:25::i;:::-;:30;;;2096:62;;;;;-1:-1:-1;;;2096:62:2;;;;;;;;;;;;-1:-1:-1;;;2096:62:2;;;;;;;;;;;;;;;2176:9;;;;;;;;2169:6;:17;;;;;;;;;;27:10:-1;;23:18;;;45:23;;2169:44:2;;;;;;;-1:-1:-1;;;;;;2169:44:2;-1:-1:-1;;;;;2169:44:2;;;;;;;;;;2028:192::o;2226:545::-;1602:13:0;1592:6;;;;:23;;;;;;;;;1584:55;;;;;-1:-1:-1;;;1584:55:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1584:55:0;;;;;;;;;;;;;;;2305:25:2;2320:9;2305:14;:25::i;:::-;:30;;2297:66;;;;;-1:-1:-1;;;2297:66:2;;;;;;;;;;;;-1:-1:-1;;;2297:66:2;;;;;;;;;;;;;;;2374:18;2414:1;2395:16;:14;:16::i;:::-;:20;;-1:-1:-1;2430:6:2;2425:235;2446:11;2442:15;;:1;:15;2425:235;;;2489:9;;;;;;;2482:6;:17;;;;;;;;;;:31;;-1:-1:-1;;;;;2482:44:2;;;:17;2511:1;;2482:31;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2482:31:2;:44;2478:172;;;2580:19;:17;:19::i;:::-;2600:11;2580:32;;;;;;;;;;;;;;;;;;;;;2553:9;;;;;;;2546:6;:17;;;;;;;;;;;:31;;2575:1;;2546:31;;;;;;;;;;;;;;:66;;;;;-1:-1:-1;;;;;2546:66:2;;;;;-1:-1:-1;;;;;2546:66:2;;;;;;2630:5;;2478:172;2459:3;;2425:235;;;-1:-1:-1;2683:9:2;;;;;;;;;2676:6;:17;;;;;;;;;;:41;;:17;;:41;;;;;;;;;;;;;;;;;;;;2669:48;;-1:-1:-1;;;;;;2669:48:2;;;;2734:9;;;;;;;2727:17;;;;;;;;:37;;;;;-1:-1:-1;;2727:37:2;;;:::i;:::-;;1649:1:0;2226:545:2;:::o;125:154:3:-;260:1;247:15;241:22;;222:51::o;2777:176:2:-;1602:13:0;1592:6;;;;:23;;;;;;;;;1584:55;;;;;-1:-1:-1;;;1584:55:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1584:55:0;;;;;;;;;;;;;;;2867:1:2;2855:9;:13;;;2847:49;;;;;-1:-1:-1;;;2847:49:2;;;;;;;;;;;;-1:-1:-1;;;2847:49:2;;;;;;;;;;;;;;;2914:9;;;;;;;;;;2907:6;:17;;;;;;;;;;:27;;;:39;;;;;;-1:-1:-1;;;2907:39:2;-1:-1:-1;;;;2907:39:2;;;;;;2777:176::o;2959:171::-;1602:13:0;1592:6;;;;:23;;;;;;;;;1584:55;;;;;-1:-1:-1;;;1584:55:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1584:55:0;;;;;;;;;;;;;;;3049:1:2;3037:9;:13;;;3029:44;;;;;-1:-1:-1;;;3029:44:2;;;;;;;;;;;;-1:-1:-1;;;3029:44:2;;;;;;;;;;;;;;;3091:9;;;;;;;;;;3084:6;:17;;;;;;;;;;:27;;;:39;;;;;;-1:-1:-1;;;3084:39:2;-1:-1:-1;;;;3084:39:2;;;;;;2959:171::o;285:161:3:-;423:1;410:15;404:22;428:1;400:30;;381:59::o;3136:118:2:-;1602:13:0;1592:6;;;;:23;;;;;;;;;1584:55;;;;;-1:-1:-1;;;1584:55:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1584:55:0;;;;;;;;;;;;;;;3213:9:2;;;;;;;;;3206:6;:17;;;;;;;;;;:28;:41;;;;;-1:-1:-1;;;3206:41:2;-1:-1:-1;;;;3206:41:2;;;;;;;;;3136:118::o;3260:207::-;1602:13:0;1592:6;;;;:23;;;;;;;;;1584:55;;;;;-1:-1:-1;;;1584:55:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1584:55:0;;;;;;;;;;;;;;;3340:16:2;:14;:16::i;:::-;3318:38;;:18;:16;:18::i;:::-;:38;;;;3310:75;;;;;-1:-1:-1;;;3310:75:2;;;;;;;;;;;;-1:-1:-1;;;3310:75:2;;;;;;;;;;;;;;;3396:6;:22;;-1:-1:-1;;3396:22:2;3405:13;3396:22;;;;;3434:26;;3450:9;;;;;;;;;3443:5;;;;3434:26;;-1:-1:-1;;3434:26:2;3260:207::o;3473:124::-;1707:13:0;1697:6;;;;:23;;;;;;;;;1689:55;;;;;-1:-1:-1;;;1689:55:0;;;;;;;;;;;;-1:-1:-1;;;1689:55:0;;;;;;;;;;;;;;;3524:6:2;:22;;3533:13;-1:-1:-1;;3524:22:2;;;;;;;;3562:28;;3580:9;;;;;;;3562:28;;-1:-1:-1;;3562:28:2;3473:124::o;823:209:3:-;971:2;958:16;;952:23;1012:2;999:16;;;993:23;952;;933:93::o;3603:244:2:-;3671:13;;:38;;;-1:-1:-1;;;3671:38:2;;3703:4;3671:38;;;;;;-1:-1:-1;;;;;3671:47:2;;;-1:-1:-1;;;;;3671:13:2;;:23;;:38;;;;;;;;;;;;;;:13;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;3671:38:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3671:38:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3671:38:2;:47;3667:174;;3734:13;;:33;;;-1:-1:-1;;;3734:33:2;;-1:-1:-1;;;;;3734:33:2;;;;;;;-1:-1:-1;;;;;3734:33:2;;;;;;;;:13;;;;;:22;;:33;;;;;;;;;;;;;;:13;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;3734:33:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3734:33:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:174:2;;-1:-1:-1;3667:174:2;;3798:13;;:32;;;-1:-1:-1;;;3798:32:2;;-1:-1:-1;;;;;3798:32:2;;;;;;;-1:-1:-1;;;;;3798:32:2;;;;;;;;:13;;;;;:21;;:32;;;;;;;;;;;;;;:13;;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;3798:32:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3798:32:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3603:244:2;;:::o;124:1556:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;124:1556:1;-1:-1:-1;;;;;124:1556:1;;;;;;;;;;;-1:-1:-1;124:1556:1;;;;;;;-1:-1:-1;124:1556:1;;;-1:-1:-1;124:1556:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;124:1556:1;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport './openzeppelin-solidity/contracts/token/ERC20/IERC20.sol';\nimport \"./MessageHandler.sol\";\n\ncontract Bridge is MessageHandler {\n    event ExchangeRequest(uint96 value, uint32 nonce);\n\n    mapping(bytes32 => bool) usedExchangeRanges;\n\n    constructor(\n        uint16 threshold,\n        address[] memory validators,\n        address _tokenContract,\n        uint96[2] memory limits,\n        uint16 rangeSize,\n        bool closeEpoch\n    ) public {\n        require(validators.length > 0);\n        require(threshold <= validators.length);\n\n        tokenContract = IERC20(_tokenContract);\n\n        epoch = 0;\n        status = Status.KEYGEN;\n        nextEpoch = 1;\n\n        states[nextEpoch] = State({\n            validators : validators,\n            threshold : threshold,\n            rangeSize : rangeSize,\n            startBlock : 0,\n            endBlock : UPPER_BOUND,\n            nonce : UPPER_BOUND,\n            x : 0,\n            y : 0,\n            closeEpoch : closeEpoch\n        });\n\n        minTxLimit = limits[0];\n        maxTxLimit = limits[1];\n\n        emit NewEpoch(0, 1);\n    }\n\n    function exchange(uint96 value) public ready {\n        require(value >= minTxLimit && value >= 10 ** 10 && value <= maxTxLimit);\n\n        uint32 txRange = (uint32(block.number) - getStartBlock()) / uint32(getRangeSize());\n        if (!usedExchangeRanges[keccak256(abi.encodePacked(txRange, epoch))]) {\n            usedExchangeRanges[keccak256(abi.encodePacked(txRange, epoch))] = true;\n            states[epoch].nonce++;\n        }\n\n        tokenContract.transferFrom(msg.sender, address(this), value);\n        emit ExchangeRequest(value, getNonce());\n    }\n}\n",
  "sourcePath": "/build/contracts/Bridge.sol",
  "ast": {
    "absolutePath": "/build/contracts/Bridge.sol",
    "exportedSymbols": {
      "Bridge": [
        677
      ]
    },
    "id": 678,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 490,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/build/contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "./openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 491,
        "nodeType": "ImportDirective",
        "scope": 678,
        "sourceUnit": 10406,
        "src": "25:66:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/build/contracts/MessageHandler.sol",
        "file": "./MessageHandler.sol",
        "id": 492,
        "nodeType": "ImportDirective",
        "scope": 678,
        "sourceUnit": 1738,
        "src": "92:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 493,
              "name": "MessageHandler",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1737,
              "src": "143:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MessageHandler_$1737",
                "typeString": "contract MessageHandler"
              }
            },
            "id": 494,
            "nodeType": "InheritanceSpecifier",
            "src": "143:14:1"
          }
        ],
        "contractDependencies": [
          488,
          1134,
          1186,
          1737
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 677,
        "linearizedBaseContracts": [
          677,
          1737,
          1186,
          1134,
          488
        ],
        "name": "Bridge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 500,
            "name": "ExchangeRequest",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 496,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "186:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "186:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 498,
                  "indexed": false,
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "200:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "185:28:1"
            },
            "src": "164:50:1"
          },
          {
            "constant": false,
            "id": 504,
            "name": "usedExchangeRanges",
            "nodeType": "VariableDeclaration",
            "scope": 677,
            "src": "220:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 503,
              "keyType": {
                "id": 501,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "228:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "220:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 502,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "239:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 588,
              "nodeType": "Block",
              "src": "474:642:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 523,
                            "name": "validators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 509,
                            "src": "492:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "492:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "512:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "492:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13464,
                        13465
                      ],
                      "referencedDeclaration": 13464,
                      "src": "484:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "484:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "484:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 530,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 506,
                          "src": "532:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 531,
                            "name": "validators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 509,
                            "src": "545:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "545:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "532:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13464,
                        13465
                      ],
                      "referencedDeclaration": 13464,
                      "src": "524:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "524:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "524:39:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 536,
                      "name": "tokenContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "574:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$10405",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 538,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "597:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 537,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10405,
                        "src": "590:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$10405_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "590:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$10405",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "574:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10405",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "574:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 542,
                      "name": "epoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "623:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "631:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "623:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "623:9:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 546,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "642:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$65",
                        "typeString": "enum BasicBridge.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 547,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "651:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$65_$",
                          "typeString": "type(enum BasicBridge.Status)"
                        }
                      },
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "KEYGEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "651:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$65",
                        "typeString": "enum BasicBridge.Status"
                      }
                    },
                    "src": "642:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$65",
                      "typeString": "enum BasicBridge.Status"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "642:22:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 551,
                      "name": "nextEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "674:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "686:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "674:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "674:13:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 555,
                        "name": "states",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "698:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_State_$59_storage_$",
                          "typeString": "mapping(uint16 => struct BasicBridge.State storage ref)"
                        }
                      },
                      "id": 557,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 556,
                        "name": "nextEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "705:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "698:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$59_storage",
                        "typeString": "struct BasicBridge.State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 559,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 509,
                          "src": "751:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 560,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 506,
                          "src": "787:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 561,
                          "name": "rangeSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "822:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "858:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "id": 563,
                          "name": "UPPER_BOUND",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "884:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 564,
                          "name": "UPPER_BOUND",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "917:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "946:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "965:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "id": 567,
                          "name": "closeEpoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 519,
                          "src": "993:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 558,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "718:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_State_$59_storage_ptr_$",
                          "typeString": "type(struct BasicBridge.State storage pointer)"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "validators",
                        "threshold",
                        "rangeSize",
                        "startBlock",
                        "endBlock",
                        "nonce",
                        "x",
                        "y",
                        "closeEpoch"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "718:296:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$59_memory",
                        "typeString": "struct BasicBridge.State memory"
                      }
                    },
                    "src": "698:316:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$59_storage",
                      "typeString": "struct BasicBridge.State storage ref"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "698:316:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 571,
                      "name": "minTxLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "1025:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 572,
                        "name": "limits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "1038:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint96_$2_memory_ptr",
                          "typeString": "uint96[2] memory"
                        }
                      },
                      "id": 574,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1045:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1038:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "1025:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:22:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 577,
                      "name": "maxTxLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1057:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 578,
                        "name": "limits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "1070:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint96_$2_memory_ptr",
                          "typeString": "uint96[2] memory"
                        }
                      },
                      "id": 580,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1077:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1070:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "1057:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:22:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1104:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1107:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 583,
                      "name": "NewEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1095:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint16_$_t_uint16_$returns$__$",
                        "typeString": "function (uint16,uint16)"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1095:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "EmitStatement",
                  "src": "1090:19:1"
                }
              ]
            },
            "documentation": null,
            "id": 589,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 506,
                  "name": "threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "291:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "291:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 509,
                  "name": "validators",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "317:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 507,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "317:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 508,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "317:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 511,
                  "name": "_tokenContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "354:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 515,
                  "name": "limits",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "386:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$2_memory_ptr",
                    "typeString": "uint96[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 512,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "386:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 514,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "393:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "386:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$2_storage_ptr",
                      "typeString": "uint96[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "name": "rangeSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "419:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "name": "closeEpoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "445:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "281:185:1"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "474:0:1"
            },
            "scope": 677,
            "src": "270:846:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 675,
              "nodeType": "Block",
              "src": "1167:511:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "id": 599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 597,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "1185:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 598,
                              "name": "minTxLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "1194:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "src": "1185:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 600,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "1208:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000_by_1",
                                "typeString": "int_const 10000000000"
                              },
                              "id": 603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1217:2:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1223:2:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "1217:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000_by_1",
                                "typeString": "int_const 10000000000"
                              }
                            },
                            "src": "1208:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1185:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 606,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "1229:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 607,
                            "name": "maxTxLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "1238:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "1229:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1185:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13464,
                        13465
                      ],
                      "referencedDeclaration": 13464,
                      "src": "1177:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:72:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:72:1"
                },
                {
                  "assignments": [
                    613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 613,
                      "name": "txRange",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "1260:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1260:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 627,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 615,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13451,
                                  "src": "1285:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1285:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1278:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint32_$",
                                "typeString": "type(uint32)"
                              },
                              "typeName": "uint32"
                            },
                            "id": 617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1278:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 618,
                              "name": "getStartBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                220,
                                233
                              ],
                              "referencedDeclaration": 220,
                              "src": "1301:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint32_$",
                                "typeString": "function () view returns (uint32)"
                              }
                            },
                            "id": 619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1301:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "1278:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 621,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1277:40:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 623,
                            "name": "getRangeSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              243,
                              266
                            ],
                            "referencedDeclaration": 243,
                            "src": "1327:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                              "typeString": "function () view returns (uint16)"
                            }
                          },
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1327:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1320:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": "uint32"
                      },
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1320:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1277:65:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1260:82:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1356:64:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 628,
                        "name": "usedExchangeRanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "1357:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 636,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 632,
                                "name": "txRange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 613,
                                "src": "1403:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 633,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73,
                                "src": "1412:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 630,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13448,
                                "src": "1386:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1386:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1386:32:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 629,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13455,
                          "src": "1376:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1376:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1357:63:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 657,
                  "nodeType": "IfStatement",
                  "src": "1352:200:1",
                  "trueBody": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "1422:130:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 638,
                              "name": "usedExchangeRanges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "1436:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 646,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 642,
                                      "name": "txRange",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 613,
                                      "src": "1482:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 643,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 73,
                                      "src": "1491:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 640,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13448,
                                      "src": "1465:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 641,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1465:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1465:32:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 639,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13455,
                                "src": "1455:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1455:43:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1436:63:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1502:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1436:70:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "1436:70:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1520:21:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 650,
                                "name": "states",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69,
                                "src": "1520:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_State_$59_storage_$",
                                  "typeString": "mapping(uint16 => struct BasicBridge.State storage ref)"
                                }
                              },
                              "id": 652,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 651,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73,
                                "src": "1527:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1520:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_State_$59_storage",
                                "typeString": "struct BasicBridge.State storage ref"
                              }
                            },
                            "id": 653,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48,
                            "src": "1520:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 655,
                        "nodeType": "ExpressionStatement",
                        "src": "1520:21:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 661,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13461,
                          "src": "1589:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1589:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 664,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13485,
                            "src": "1609:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Bridge_$677",
                              "typeString": "contract Bridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Bridge_$677",
                              "typeString": "contract Bridge"
                            }
                          ],
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1601:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1601:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 666,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "1616:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 658,
                        "name": "tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1562:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10405",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10388,
                      "src": "1562:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1562:60:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:60:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 670,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "1653:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 671,
                          "name": "getNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            276,
                            289
                          ],
                          "referencedDeclaration": 276,
                          "src": "1660:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint32_$",
                            "typeString": "function () view returns (uint32)"
                          }
                        },
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1660:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 669,
                      "name": "ExchangeRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "1637:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint96_$_t_uint32_$returns$__$",
                        "typeString": "function (uint96,uint32)"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 674,
                  "nodeType": "EmitStatement",
                  "src": "1632:39:1"
                }
              ]
            },
            "documentation": null,
            "id": 676,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 594,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 593,
                  "name": "ready",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 93,
                  "src": "1161:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1161:5:1"
              }
            ],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "1140:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1139:14:1"
            },
            "returnParameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1167:0:1"
            },
            "scope": 677,
            "src": "1122:556:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 678,
        "src": "124:1556:1"
      }
    ],
    "src": "0:1681:1"
  },
  "legacyAST": {
    "absolutePath": "/build/contracts/Bridge.sol",
    "exportedSymbols": {
      "Bridge": [
        677
      ]
    },
    "id": 678,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 490,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/build/contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "./openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 491,
        "nodeType": "ImportDirective",
        "scope": 678,
        "sourceUnit": 10406,
        "src": "25:66:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/build/contracts/MessageHandler.sol",
        "file": "./MessageHandler.sol",
        "id": 492,
        "nodeType": "ImportDirective",
        "scope": 678,
        "sourceUnit": 1738,
        "src": "92:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 493,
              "name": "MessageHandler",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1737,
              "src": "143:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MessageHandler_$1737",
                "typeString": "contract MessageHandler"
              }
            },
            "id": 494,
            "nodeType": "InheritanceSpecifier",
            "src": "143:14:1"
          }
        ],
        "contractDependencies": [
          488,
          1134,
          1186,
          1737
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 677,
        "linearizedBaseContracts": [
          677,
          1737,
          1186,
          1134,
          488
        ],
        "name": "Bridge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 500,
            "name": "ExchangeRequest",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 496,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "186:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "186:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 498,
                  "indexed": false,
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "200:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "200:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "185:28:1"
            },
            "src": "164:50:1"
          },
          {
            "constant": false,
            "id": 504,
            "name": "usedExchangeRanges",
            "nodeType": "VariableDeclaration",
            "scope": 677,
            "src": "220:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 503,
              "keyType": {
                "id": 501,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "228:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "220:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 502,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "239:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 588,
              "nodeType": "Block",
              "src": "474:642:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 523,
                            "name": "validators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 509,
                            "src": "492:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "492:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "512:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "492:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13464,
                        13465
                      ],
                      "referencedDeclaration": 13464,
                      "src": "484:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "484:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "484:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 530,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 506,
                          "src": "532:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 531,
                            "name": "validators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 509,
                            "src": "545:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "545:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "532:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13464,
                        13465
                      ],
                      "referencedDeclaration": 13464,
                      "src": "524:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "524:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "524:39:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 536,
                      "name": "tokenContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "574:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$10405",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 538,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "597:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 537,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10405,
                        "src": "590:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$10405_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "590:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$10405",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "574:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10405",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "574:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 542,
                      "name": "epoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "623:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "631:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "623:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "623:9:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 546,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "642:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$65",
                        "typeString": "enum BasicBridge.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 547,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "651:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$65_$",
                          "typeString": "type(enum BasicBridge.Status)"
                        }
                      },
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "KEYGEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "651:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$65",
                        "typeString": "enum BasicBridge.Status"
                      }
                    },
                    "src": "642:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$65",
                      "typeString": "enum BasicBridge.Status"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "642:22:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 551,
                      "name": "nextEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "674:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "686:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "674:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "674:13:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 555,
                        "name": "states",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "698:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_State_$59_storage_$",
                          "typeString": "mapping(uint16 => struct BasicBridge.State storage ref)"
                        }
                      },
                      "id": 557,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 556,
                        "name": "nextEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "705:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "698:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$59_storage",
                        "typeString": "struct BasicBridge.State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 559,
                          "name": "validators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 509,
                          "src": "751:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 560,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 506,
                          "src": "787:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 561,
                          "name": "rangeSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "822:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "858:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "id": 563,
                          "name": "UPPER_BOUND",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "884:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 564,
                          "name": "UPPER_BOUND",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "917:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "946:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "965:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "id": 567,
                          "name": "closeEpoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 519,
                          "src": "993:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 558,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "718:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_State_$59_storage_ptr_$",
                          "typeString": "type(struct BasicBridge.State storage pointer)"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "validators",
                        "threshold",
                        "rangeSize",
                        "startBlock",
                        "endBlock",
                        "nonce",
                        "x",
                        "y",
                        "closeEpoch"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "718:296:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$59_memory",
                        "typeString": "struct BasicBridge.State memory"
                      }
                    },
                    "src": "698:316:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$59_storage",
                      "typeString": "struct BasicBridge.State storage ref"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "698:316:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 571,
                      "name": "minTxLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "1025:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 572,
                        "name": "limits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "1038:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint96_$2_memory_ptr",
                          "typeString": "uint96[2] memory"
                        }
                      },
                      "id": 574,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1045:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1038:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "1025:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:22:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 577,
                      "name": "maxTxLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1057:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 578,
                        "name": "limits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "1070:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint96_$2_memory_ptr",
                          "typeString": "uint96[2] memory"
                        }
                      },
                      "id": 580,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1077:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1070:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "1057:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:22:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1104:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1107:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 583,
                      "name": "NewEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1095:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint16_$_t_uint16_$returns$__$",
                        "typeString": "function (uint16,uint16)"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1095:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "EmitStatement",
                  "src": "1090:19:1"
                }
              ]
            },
            "documentation": null,
            "id": 589,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 506,
                  "name": "threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "291:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "291:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 509,
                  "name": "validators",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "317:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 507,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "317:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 508,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "317:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 511,
                  "name": "_tokenContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "354:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 515,
                  "name": "limits",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "386:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$2_memory_ptr",
                    "typeString": "uint96[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 512,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "386:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 514,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "393:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "386:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$2_storage_ptr",
                      "typeString": "uint96[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "name": "rangeSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "419:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "name": "closeEpoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "445:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "281:185:1"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "474:0:1"
            },
            "scope": 677,
            "src": "270:846:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 675,
              "nodeType": "Block",
              "src": "1167:511:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "id": 599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 597,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "1185:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 598,
                              "name": "minTxLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "1194:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "src": "1185:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 600,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "1208:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000_by_1",
                                "typeString": "int_const 10000000000"
                              },
                              "id": 603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1217:2:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1223:2:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "1217:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000_by_1",
                                "typeString": "int_const 10000000000"
                              }
                            },
                            "src": "1208:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1185:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 606,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "1229:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 607,
                            "name": "maxTxLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "1238:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "1229:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1185:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13464,
                        13465
                      ],
                      "referencedDeclaration": 13464,
                      "src": "1177:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:72:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:72:1"
                },
                {
                  "assignments": [
                    613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 613,
                      "name": "txRange",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "1260:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1260:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 627,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 615,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13451,
                                  "src": "1285:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1285:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1278:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint32_$",
                                "typeString": "type(uint32)"
                              },
                              "typeName": "uint32"
                            },
                            "id": 617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1278:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 618,
                              "name": "getStartBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                220,
                                233
                              ],
                              "referencedDeclaration": 220,
                              "src": "1301:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint32_$",
                                "typeString": "function () view returns (uint32)"
                              }
                            },
                            "id": 619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1301:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "1278:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 621,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1277:40:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 623,
                            "name": "getRangeSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              243,
                              266
                            ],
                            "referencedDeclaration": 243,
                            "src": "1327:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                              "typeString": "function () view returns (uint16)"
                            }
                          },
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1327:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1320:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": "uint32"
                      },
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1320:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1277:65:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1260:82:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1356:64:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 628,
                        "name": "usedExchangeRanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "1357:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 636,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 632,
                                "name": "txRange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 613,
                                "src": "1403:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 633,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73,
                                "src": "1412:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 630,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13448,
                                "src": "1386:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1386:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1386:32:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 629,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13455,
                          "src": "1376:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1376:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1357:63:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 657,
                  "nodeType": "IfStatement",
                  "src": "1352:200:1",
                  "trueBody": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "1422:130:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 638,
                              "name": "usedExchangeRanges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "1436:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 646,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 642,
                                      "name": "txRange",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 613,
                                      "src": "1482:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 643,
                                      "name": "epoch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 73,
                                      "src": "1491:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 640,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13448,
                                      "src": "1465:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 641,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1465:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1465:32:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 639,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13455,
                                "src": "1455:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1455:43:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1436:63:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1502:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1436:70:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "1436:70:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1520:21:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 650,
                                "name": "states",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69,
                                "src": "1520:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_State_$59_storage_$",
                                  "typeString": "mapping(uint16 => struct BasicBridge.State storage ref)"
                                }
                              },
                              "id": 652,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 651,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73,
                                "src": "1527:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1520:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_State_$59_storage",
                                "typeString": "struct BasicBridge.State storage ref"
                              }
                            },
                            "id": 653,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48,
                            "src": "1520:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 655,
                        "nodeType": "ExpressionStatement",
                        "src": "1520:21:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 661,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13461,
                          "src": "1589:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1589:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 664,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13485,
                            "src": "1609:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Bridge_$677",
                              "typeString": "contract Bridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Bridge_$677",
                              "typeString": "contract Bridge"
                            }
                          ],
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1601:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1601:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 666,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "1616:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 658,
                        "name": "tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1562:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10405",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10388,
                      "src": "1562:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1562:60:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:60:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 670,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "1653:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 671,
                          "name": "getNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            276,
                            289
                          ],
                          "referencedDeclaration": 276,
                          "src": "1660:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint32_$",
                            "typeString": "function () view returns (uint32)"
                          }
                        },
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1660:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 669,
                      "name": "ExchangeRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "1637:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint96_$_t_uint32_$returns$__$",
                        "typeString": "function (uint96,uint32)"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 674,
                  "nodeType": "EmitStatement",
                  "src": "1632:39:1"
                }
              ]
            },
            "documentation": null,
            "id": 676,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 594,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 593,
                  "name": "ready",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 93,
                  "src": "1161:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1161:5:1"
              }
            ],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "1140:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1139:14:1"
            },
            "returnParameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1167:0:1"
            },
            "scope": 677,
            "src": "1122:556:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 678,
        "src": "124:1556:1"
      }
    ],
    "src": "0:1681:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.9+commit.e560f70d.Emscripten.clang"
  },
  "networks": {
    "44": {
      "events": {
        "0x31e108482b78b4d36dea7b82ed2a63a14bb1556d33d0e61a668f4282450970f2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "value",
              "type": "uint96"
            },
            {
              "indexed": false,
              "name": "nonce",
              "type": "uint32"
            }
          ],
          "name": "ExchangeRequest",
          "type": "event"
        },
        "0xea8fefdb9a5231578b5ca2511ea50329b34ea30f3f8912343d34118572a25b6e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "epoch",
              "type": "uint16"
            }
          ],
          "name": "EpochEnd",
          "type": "event"
        },
        "0xe143ea1b9fab2f5402f146a5618fb1cd40b4b03d37a0b98d3b62a706affbcc72": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "epoch",
              "type": "uint16"
            }
          ],
          "name": "EpochClose",
          "type": "event"
        },
        "0x040709db3bd52c05ad5f79015b1cff2eb1d5566d788a4a0b514d1fb8a2c0b83e": {
          "anonymous": false,
          "inputs": [],
          "name": "ForceSign",
          "type": "event"
        },
        "0xfb8e00e9d7c99f4d3070324ad79f8db723e140c6cea87362c8f92500d59d9f14": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "oldEpoch",
              "type": "uint16"
            },
            {
              "indexed": true,
              "name": "newEpoch",
              "type": "uint16"
            }
          ],
          "name": "NewEpoch",
          "type": "event"
        },
        "0xeb3dfac264ae50dc3d10ccdd0681a7d67ace6c32c31a924bb66884a5483bac4e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "epoch",
              "type": "uint16"
            }
          ],
          "name": "NewEpochCancelled",
          "type": "event"
        },
        "0xb54ecb66a176f6f9932a576abe0b1671de59cf93398c93922abbcdedb4daa9ae": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "oldEpoch",
              "type": "uint16"
            },
            {
              "indexed": true,
              "name": "newEpoch",
              "type": "uint16"
            }
          ],
          "name": "NewFundsTransfer",
          "type": "event"
        },
        "0xfcae04201d08bba7fae85b1facd3e4dfea5aa6f38c3a6b3101e8fb323ebdda82": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "epoch",
              "type": "uint16"
            },
            {
              "indexed": false,
              "name": "x",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "y",
              "type": "uint256"
            }
          ],
          "name": "EpochStart",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x44c158FE850821ae69DaF37AADF5c539e9d0025B",
      "transactionHash": "0x810b5d92a91ca27dc5318c13b05afe50e22b7ad116f01845a3138b084d7c5447"
    }
  },
  "schemaVersion": "3.2.4",
  "updatedAt": "2020-09-03T03:07:24.033Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}